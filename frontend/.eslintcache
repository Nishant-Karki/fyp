[{"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\Contact.js":"1","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\PopUp.js":"2","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\FLogin.js":"3","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\BookService.js":"4","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-actions.js":"5","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\index.js":"6","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\Admin.js":"7","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\SignUpPage.js":"8","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\BingMap.js":"9","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ParallaxComp.js":"10","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-types.js":"11","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\GLogin.js":"12","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\rootReducer.js":"13","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\App.js":"14","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\UserRoles.js":"15","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Footer\\Footer.js":"16","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-reducers.js":"17","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useTableActions.js":"18","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\LoginPage.js":"19","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-reducers.js":"20","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-actions.js":"21","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-types.js":"22","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\ProfilePic.js":"23","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Navbar\\Navbar.js":"24","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\About.js":"25","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\ImageUploader.js":"26","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\store.js":"27","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\ShowItem.js":"28","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\OurServices.js":"29","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\UserProfile.js":"30","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ShortDetails.js":"31","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\EditDetails.js":"32","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\OurTeam.js":"33","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\MenuDropdown.js":"34","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useCustomForm.js":"35","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\useSettings.js":"36","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\GoogleMap.js":"37","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\StaffProfile.js":"38","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-types.js":"39","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-reducers.js":"40","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-actions.js":"41","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\Inventory.js":"42","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\Cart.js":"43","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Payment\\Payment.js":"44","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\index.js":"45","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\ProductsTable.js":"46","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Payment\\useKhaltiCheckout.js":"47","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\CustomToolbar.js":"48","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\CustomSnackbar.js":"49","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ClientReview.js":"50","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useCards.js":"51","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\ServicesTable.js":"52","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\AdminDashboard.js":"53","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\ProtectedRoute.js":"54","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\Routes.js":"55","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\RoutesWithNavbar.js":"56","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\AdminRoutes.js":"57","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\AddItem.js":"58","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\OrderPage.js":"59","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\AppointmentTable.js":"60","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\EcommerceTable.js":"61","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\BookingCart.js":"62"},{"size":4310,"mtime":1609906534908,"results":"63","hashOfConfig":"64"},{"size":1039,"mtime":1612005993633,"results":"65","hashOfConfig":"64"},{"size":895,"mtime":1607927029834,"results":"66","hashOfConfig":"64"},{"size":2801,"mtime":1614779108254,"results":"67","hashOfConfig":"64"},{"size":3957,"mtime":1614778139372,"results":"68","hashOfConfig":"64"},{"size":989,"mtime":1614519373204,"results":"69","hashOfConfig":"64"},{"size":1979,"mtime":1614771976331,"results":"70","hashOfConfig":"64"},{"size":9298,"mtime":1614521295659,"results":"71","hashOfConfig":"64"},{"size":859,"mtime":1609994722156,"results":"72","hashOfConfig":"64"},{"size":1491,"mtime":1610083457000,"results":"73","hashOfConfig":"64"},{"size":298,"mtime":1614076923302,"results":"74","hashOfConfig":"64"},{"size":2254,"mtime":1614060626337,"results":"75","hashOfConfig":"64"},{"size":366,"mtime":1613799915793,"results":"76","hashOfConfig":"64"},{"size":188,"mtime":1614676604731,"results":"77","hashOfConfig":"64"},{"size":11795,"mtime":1614678732218,"results":"78","hashOfConfig":"64"},{"size":1498,"mtime":1613637108954,"results":"79","hashOfConfig":"64"},{"size":1968,"mtime":1614314933062,"results":"80","hashOfConfig":"64"},{"size":6607,"mtime":1614766796828,"results":"81","hashOfConfig":"64"},{"size":7121,"mtime":1614779033036,"results":"82","hashOfConfig":"64"},{"size":1085,"mtime":1614065915672,"results":"83","hashOfConfig":"64"},{"size":785,"mtime":1614251622317,"results":"84","hashOfConfig":"64"},{"size":213,"mtime":1614065848248,"results":"85","hashOfConfig":"64"},{"size":2829,"mtime":1614065940113,"results":"86","hashOfConfig":"64"},{"size":9476,"mtime":1614677034199,"results":"87","hashOfConfig":"64"},{"size":1395,"mtime":1609865588988,"results":"88","hashOfConfig":"64"},{"size":2856,"mtime":1614240988292,"results":"89","hashOfConfig":"64"},{"size":665,"mtime":1614263506737,"results":"90","hashOfConfig":"64"},{"size":3076,"mtime":1613538139260,"results":"91","hashOfConfig":"64"},{"size":2368,"mtime":1614512713218,"results":"92","hashOfConfig":"64"},{"size":6899,"mtime":1614075328037,"results":"93","hashOfConfig":"64"},{"size":2810,"mtime":1614676161333,"results":"94","hashOfConfig":"64"},{"size":6566,"mtime":1614076622365,"results":"95","hashOfConfig":"64"},{"size":860,"mtime":1613974757715,"results":"96","hashOfConfig":"64"},{"size":1140,"mtime":1613975571705,"results":"97","hashOfConfig":"64"},{"size":5561,"mtime":1614755035609,"results":"98","hashOfConfig":"64"},{"size":3135,"mtime":1614062168767,"results":"99","hashOfConfig":"64"},{"size":652,"mtime":1609942819287,"results":"100","hashOfConfig":"64"},{"size":3302,"mtime":1614066627793,"results":"101","hashOfConfig":"64"},{"size":667,"mtime":1614773247058,"results":"102","hashOfConfig":"64"},{"size":3642,"mtime":1614773290564,"results":"103","hashOfConfig":"64"},{"size":1210,"mtime":1614155259458,"results":"104","hashOfConfig":"64"},{"size":2530,"mtime":1614156615164,"results":"105","hashOfConfig":"64"},{"size":5886,"mtime":1613550747152,"results":"106","hashOfConfig":"64"},{"size":1622,"mtime":1613568367050,"results":"107","hashOfConfig":"64"},{"size":549,"mtime":1607952331530,"results":"108","hashOfConfig":"64"},{"size":5598,"mtime":1614772127090,"results":"109","hashOfConfig":"64"},{"size":1024,"mtime":1613559336044,"results":"110","hashOfConfig":"64"},{"size":544,"mtime":1614401038639,"results":"111","hashOfConfig":"64"},{"size":632,"mtime":1613658651585,"results":"112","hashOfConfig":"64"},{"size":1592,"mtime":1612946366007,"results":"113","hashOfConfig":"64"},{"size":2247,"mtime":1609929836753,"results":"114","hashOfConfig":"64"},{"size":5707,"mtime":1614772122834,"results":"115","hashOfConfig":"64"},{"size":6366,"mtime":1614772006549,"results":"116","hashOfConfig":"64"},{"size":850,"mtime":1614153902494,"results":"117","hashOfConfig":"64"},{"size":1843,"mtime":1614767762922,"results":"118","hashOfConfig":"64"},{"size":1914,"mtime":1614779463023,"results":"119","hashOfConfig":"64"},{"size":0,"mtime":1614153858143,"results":"120","hashOfConfig":"64"},{"size":4948,"mtime":1614252493429,"results":"121","hashOfConfig":"64"},{"size":7400,"mtime":1614771837673,"results":"122","hashOfConfig":"64"},{"size":3987,"mtime":1614773065913,"results":"123","hashOfConfig":"64"},{"size":3823,"mtime":1614773062648,"results":"124","hashOfConfig":"64"},{"size":4457,"mtime":1614779565408,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1qj5tx2",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"128"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"128"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"128"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"128"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"256","usedDeprecatedRules":"128"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"128"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"128"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"128"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"128"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\Contact.js",[],["279","280"],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\PopUp.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\FLogin.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\BookService.js",["281","282","283"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchAppointment,\r\n  fetchServices,\r\n  fetchStaffs,\r\n  fetchUserAppointment,\r\n  loadCurrentService,\r\n} from \"../../redux/Booking/booking-actions\";\r\n\r\nfunction BookService() {\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state) => state.login.userData);\r\n  useEffect(() => {\r\n    let id;\r\n    userData !== undefined && userData.map((item) => (id = item.user_id));\r\n    dispatch(fetchUserAppointment(id));\r\n    dispatch(fetchServices());\r\n    dispatch(fetchStaffs());\r\n    dispatch(fetchAppointment());\r\n  }, []);\r\n\r\n  const services = useSelector((state) => state.booking.services);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\" style={{ marginTop: \"10rem\" }}>\r\n        <Box>\r\n          <Grid container spacing={2}>\r\n            {services.map((item) => (\r\n              <Grid key={item.product_id} item xs={12} sm={6} md={3}>\r\n                <Paper className=\"product-container\">\r\n                  <Box className=\"image-container\">\r\n                    <img\r\n                      src={\r\n                        require(`../../images/services/${item.image}`).default\r\n                      }\r\n                      alt=\"product-img\"\r\n                      className=\"image\"\r\n                    />\r\n                  </Box>\r\n                  <Box textAlign=\"center\" marginTop=\"0.3rem\">\r\n                    <Typography align=\"center\" variant=\"body1\">\r\n                      {item.name}\r\n                    </Typography>\r\n                    <Typography align=\"center\" variant=\"body1\">\r\n                      Rs. {item.price}\r\n                    </Typography>\r\n                    <Link\r\n                      to={`/booking/${item.service_id}`}\r\n                      style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                      onClick={() => dispatch(loadCurrentService(item))}\r\n                    >\r\n                      <Button\r\n                        style={{\r\n                          marginBottom: \"0.6rem\",\r\n                          backgroundColor: \"teal\",\r\n                          marginTop: \"0.3rem\",\r\n                          width: \"9rem\",\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"caption\">BOOK NOW</Typography>\r\n                      </Button>\r\n                    </Link>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookService;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-actions.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\index.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\Admin.js",["284"],"import React, { useEffect } from \"react\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  makeStyles,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAppointment } from \"../../redux/Booking/booking-actions\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    height: \"14rem\",\r\n    width: \"18rem\",\r\n  },\r\n  box: {\r\n    height: \"14rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Admin() {\r\n  const appointments = useSelector((state) => state.booking.appointments);\r\n  const staffs = useSelector((state) => state.booking.staffs);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAppointment());\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const GridContainer = (props) => {\r\n    const { number, title } = props;\r\n    return (\r\n      <Grid item xs={12} sm={6} md={4}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            align=\"center\"\r\n            style={{ paddingTop: \"1rem\", marginBottom: \"-2rem\" }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Box className={classes.box}>\r\n            <Typography variant=\"h1\">\r\n              <CountUp end={number} duration={3} />\r\n            </Typography>\r\n          </Box>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  };\r\n  return (\r\n    <AdminDashboard>\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n          <GridContainer\r\n            number={appointments.length}\r\n            title=\"Appointment Count\"\r\n          />\r\n          <GridContainer number={staffs.length} title=\"Staff Count\" />\r\n          <GridContainer\r\n            number={appointments.length}\r\n            title=\"Total Appointment\"\r\n          />\r\n        </Grid>\r\n      </Container>\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\SignUpPage.js",["285"],"import {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Moment from \"moment\";\r\n\r\nimport axios from \"axios\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\n\r\nconst useStyles = makeStyles({\r\n  contactContainer: { marginTop: \"10%\", marginBottom: \"10%\" },\r\n  paper: {\r\n    width: \"33rem\",\r\n    padding: \"2.5rem\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  submitBtn: {\r\n    textAlign: \"center\",\r\n    marginTop: \"1.4rem\",\r\n  },\r\n  radioButton: {\r\n    paddingLeft: \"1.4rem\",\r\n    marginTop: \"0.7rem\",\r\n  },\r\n  login: {\r\n    marginTop: \"-1rem\",\r\n    paddingBottom: \"1rem\",\r\n    marginLeft: \"18rem\",\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"inherit\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  fname: Yup.string().required(\"Required\"),\r\n  lname: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email().required(\"Invalid Email!!\"),\r\n  password: Yup.string()\r\n    .min(8, \"Must have 8 characters\")\r\n    .required(\"Password is required\"),\r\n  passwordConfirmation: Yup.string()\r\n    .required(\"Password is required\")\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match.\"),\r\n  phone: Yup.number().min(10).required(\"Number is required\"),\r\n  dob: Yup.date().required(\"Date is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  fname: \"\",\r\n  lname: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordConfirmation: \"\",\r\n  phone: null,\r\n  dob: null,\r\n  gender: \"\",\r\n};\r\n\r\nfunction SignUpPage() {\r\n  const classes = useStyles();\r\n\r\n  let history = useHistory();\r\n  const { CustomTextField, CustomDatePicker } = useCustomForm();\r\n\r\n  const token = useSelector((state) => state.login.authToken);\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  const radioData = [\r\n    { label: \"Male\", value: \"Male\" },\r\n    { label: \"Female\", value: \"Female\" },\r\n    { label: \"Other\", value: \"Other\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (token != null) {\r\n      setSnackbar(true);\r\n      setResponse(\"Already logged in\");\r\n      setSnackType(\"warning\");\r\n\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 1500);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    axios\r\n      .post(\"/register\", {\r\n        values,\r\n      })\r\n      .then((response) => {\r\n        setResponse(response.data.message);\r\n        setSnackType(response.data.type);\r\n\r\n        setTimeout(() => {\r\n          response.data.type === \"success\" && history.push(\"/login\");\r\n        }, 1500);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.contactContainer}>\r\n      {response && response.length > 0 && (\r\n        <CustomSnackbar\r\n          snackbarOpen={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackType={snackType}\r\n          snackContent={response}\r\n        />\r\n      )}\r\n      <Typography variant=\"h4\" style={{ textAlign: \"center\" }}>\r\n        JOIN US\r\n      </Typography>\r\n      <Box className={classes.box}>\r\n        <Paper className={classes.paper}>\r\n          <Link to=\"/login\" className={classes.link}>\r\n            <Typography\r\n              align=\"right\"\r\n              type=\"button\"\r\n              variant=\"body2\"\r\n              className={classes.login}\r\n            >\r\n              Login Instead\r\n            </Typography>\r\n          </Link>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={SignUpSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({ errors, handleChange, touched, setFieldValue, values }) => (\r\n              <Form>\r\n                <Grid container spacing={4} component=\"div\">\r\n                  <Grid item xs={12} sm={6}>\r\n                    <CustomTextField\r\n                      label=\"First Name\"\r\n                      name=\"fname\"\r\n                      type=\"text\"\r\n                      error={errors.fname && touched.fname}\r\n                      errortext={errors.fname}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <CustomTextField\r\n                      label=\"Last Name\"\r\n                      name=\"lname\"\r\n                      type=\"text\"\r\n                      error={errors.lname && touched.lname}\r\n                      errortext={errors.lname}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      label=\"Your Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      error={errors.email && touched.email}\r\n                      errortext={errors.email}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    {\" \"}\r\n                    <CustomTextField\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      error={errors.password && touched.password}\r\n                      errortext={errors.password}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <CustomTextField\r\n                      label=\"Confirm\"\r\n                      name=\"passwordConfirmation\"\r\n                      type=\"password\"\r\n                      error={\r\n                        errors.passwordConfirmation &&\r\n                        touched.passwordConfirmation\r\n                      }\r\n                      errortext={errors.passwordConfirmation}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <CustomTextField\r\n                      label=\"Phone\"\r\n                      type=\"tel\"\r\n                      name=\"phone\"\r\n                      error={errors.phone && touched.phone}\r\n                      errortext={errors.phone}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Box>\r\n                      <CustomDatePicker\r\n                        label=\"Date of Birth\"\r\n                        name=\"dob\"\r\n                        disableFuture\r\n                        fullWidth\r\n                        minDate={new Date(\"1950-01-01\")}\r\n                        value={values.dob}\r\n                        setFieldValue={setFieldValue}\r\n                        error={errors.dob && touched.dob}\r\n                        inputVariant=\"outlined\"\r\n                        onChange={(value) =>\r\n                          setFieldValue(\r\n                            \"dob\",\r\n                            Moment(value).format(\"YYYY-MM-DD\")\r\n                          )\r\n                        }\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.radioButton}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel color=\"secondary\" component=\"legend\">\r\n                        Gender\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        label=\"gender\"\r\n                        name=\"gender\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"gender\", e.target.value)\r\n                        }\r\n                      >\r\n                        <Box display=\"flex\">\r\n                          {radioData.map((radio) => (\r\n                            <FormControlLabel\r\n                              key={radio.value}\r\n                              value={radio.value}\r\n                              control={<Radio size=\"small\" />}\r\n                              label={radio.label}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box textAlign=\"center\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    className={classes.submitBtn}\r\n                    onClick={() => setSnackbar(true)}\r\n                  >\r\n                    Sign Up\r\n                  </Button>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\BingMap.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ParallaxComp.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-types.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\GLogin.js",["286","287","288"],"import React from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  authToken,\r\n  isLoggedIn,\r\n  userData,\r\n} from \"../../redux/Login/login-actions\";\r\n\r\nimport { FaGoogle } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nfunction GLogin({ setResponse, setSnackType, setSnackbar }) {\r\n  let history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const successResponse = (response) => {\r\n    const {\r\n      givenName,\r\n      familyName,\r\n      email,\r\n      googleId,\r\n      imageUrl,\r\n    } = response.profileObj;\r\n    dispatch(authToken(response.tokenObj.access_token));\r\n    axios\r\n      .post(\"/social-login\", {\r\n        givenName,\r\n        familyName,\r\n        email,\r\n        googleId,\r\n        imageUrl,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setResponse(res.data.message);\r\n        setSnackType(res.data.type);\r\n        setSnackbar(true);\r\n        dispatch(userData(res.data.result));\r\n\r\n        // setTimeout(() => {\r\n        //   history.push(\"/\");\r\n        // }, 1500);\r\n\r\n        // localStorage.setItem(\"token\", response.tokenObj.access_token);\r\n      });\r\n  };\r\n\r\n  const failureResponse = (res) => {\r\n    setResponse(\"Failed to Login\");\r\n    setSnackType(\"info\");\r\n    setSnackbar(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GoogleLogin\r\n        clientId=\"1063695284455-cqvqm27presuv90l5ufd06jjo0ligt02.apps.googleusercontent.com\"\r\n        render={(renderProps) => (\r\n          <Button style={{ letterSpacing: 0.7 }} onClick={renderProps.onClick}>\r\n            <FaGoogle\r\n              size={18}\r\n              style={{ marginRight: \"1rem\", marginTop: \"0.1rem\" }}\r\n            />\r\n            Continue with Google\r\n          </Button>\r\n        )}\r\n        onSuccess={successResponse}\r\n        onFailure={failureResponse}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     isLoggedIn: (message) => dispatch(isLoggedIn(message)),\r\n//     userData: (message) => dispatch(userData(message)),\r\n//   };\r\n// };\r\n\r\nexport default GLogin;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\App.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\UserRoles.js",["289","290","291"],"import {\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  Container,\r\n  InputAdornment,\r\n  TextField,\r\n  Grid,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\nimport PopUp from \"../common/PopUp\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport CustomToolbar from \"../common/CustomToolbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport {\r\n  fetchStaffs,\r\n  demoteStaff,\r\n  fetchAdmin,\r\n  demoteAdmin,\r\n} from \"../../redux/Booking/booking-actions\";\r\n\r\nexport default function UserRoles() {\r\n  //state for snackbar\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  //popup for demoting staff\r\n  const [deletePopUp, setDeletePopUp] = useState(false);\r\n\r\n  //for popup\r\n  const [openPopUp, setOpenPopUp] = useState(false);\r\n\r\n  //to store role\r\n  const [role, setRole] = useState(\"C\");\r\n\r\n  //for search box value\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  //data from backend\r\n  const [userData, setUserData] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  // const [prevRole, setPrevRole] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchStaffs());\r\n    dispatch(fetchAdmin());\r\n  }, []);\r\n\r\n  const staffsAvailable = useSelector((state) => state.booking.staffs);\r\n  const adminsAvailable = useSelector((state) => state.booking.admins);\r\n\r\n  const fetchUser = () => {\r\n    axios.post(\"/userRole\", { email: value }).then((res) => {\r\n      setUserData(res.data.result);\r\n      setSnackbar(true);\r\n      setResponse(res.data.message);\r\n      setSnackType(res.data.type);\r\n    });\r\n    setTimeout(() => {\r\n      dispatch(fetchStaffs());\r\n      dispatch(fetchAdmin());\r\n    }, 1000);\r\n  };\r\n\r\n  const updateUser = (id) => {\r\n    axios.post(\"/updateRole\", { id: id, role: role }).then((res) => {\r\n      setSnackbar(true);\r\n      setResponse(res.data.message);\r\n      setSnackType(res.data.type);\r\n      axios\r\n        .post(\"/userRole\", { email: value })\r\n        .then((res) => setUserData(res.data.result));\r\n    });\r\n    setOpenPopUp(false);\r\n    setTimeout(() => {\r\n      dispatch(fetchStaffs());\r\n      dispatch(fetchAdmin());\r\n    }, 1000);\r\n  };\r\n  const demoteAdmins = () => {\r\n    setDeletePopUp(false);\r\n    console.log(userId);\r\n    dispatch(demoteAdmin(userId));\r\n    setTimeout(() => {\r\n      dispatch(fetchStaffs());\r\n      dispatch(fetchAdmin());\r\n    }, 1000);\r\n  };\r\n\r\n  const demoteStaffs = () => {\r\n    dispatch(demoteStaff(userId));\r\n    setDeletePopUp(false);\r\n    // console.log(prevRole);\r\n    // axios.post(\"/demoteStaff\", { id: id }).then((res) => {\r\n    setTimeout(() => {\r\n      dispatch(fetchStaffs());\r\n      dispatch(fetchAdmin());\r\n    }, 1000);\r\n    // setSnackbar(true);\r\n    // setResponse(res.data.message);\r\n    // setSnackType(res.data.type);\r\n    // });\r\n  };\r\n  return (\r\n    <AdminDashboard>\r\n      {response && response.length > 0 && (\r\n        <CustomSnackbar\r\n          snackbarOpen={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackType={snackType}\r\n          snackContent={response}\r\n        />\r\n      )}\r\n      <Typography variant=\"h6\">User Roles</Typography>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Search User\"\r\n            variant=\"outlined\"\r\n            value={value}\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            inputProps={{\r\n              maxLength: 50,\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <BsSearch />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button\r\n            onClick={() => fetchUser()}\r\n            style={{\r\n              marginLeft: \"2rem\",\r\n              width: \"8rem\",\r\n              backgroundColor: \"teal\",\r\n            }}\r\n          >\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {userData &&\r\n        userData.length > 0 &&\r\n        userData.map((item) => (\r\n          <Box\r\n            key={item.user_id}\r\n            marginTop=\"2rem\"\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Paper style={{ padding: \"1.5rem\", width: \"29.2rem\" }}>\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"h6\"\r\n                style={{ paddingBottom: \"1rem\" }}\r\n              >\r\n                USER DETAIL\r\n              </Typography>\r\n              <Grid container justify=\"center\" style={{ paddingLeft: \"4rem\" }}>\r\n                <Grid item xs={5}>\r\n                  <Typography variant=\"body1\">Username</Typography>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Typography variant=\"body1\">\r\n                    {item.fname} {item.lname}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <Typography variant=\"body1\">Email id</Typography>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Typography variant=\"body1\">{item.email}</Typography>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <Typography variant=\"body1\">Role</Typography>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Typography variant=\"body1\">\r\n                    {item.role === \"A\" ? (\r\n                      <span>Admin</span>\r\n                    ) : item.role === \"S\" ? (\r\n                      <span>Staff</span>\r\n                    ) : (\r\n                      <span>Client</span>\r\n                    )}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Box display=\"flex\" justifyContent=\"center\" marginTop=\"1.2rem\">\r\n                <Button\r\n                  style={{ backgroundColor: \"teal\", width: \"12rem\" }}\r\n                  onClick={() => setOpenPopUp(true)}\r\n                >\r\n                  <Typography>Change Role</Typography>\r\n                </Button>\r\n              </Box>\r\n            </Paper>\r\n            <PopUp\r\n              title=\"Choose User Role\"\r\n              openPopup={openPopUp}\r\n              setOpenPopup={setOpenPopUp}\r\n            >\r\n              <Box width=\"20rem\">\r\n                <RadioGroup\r\n                  name=\"role\"\r\n                  value={role}\r\n                  onChange={(e) => setRole(e.target.value)}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"C\"\r\n                    control={<Radio />}\r\n                    label=\"Client\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"A\"\r\n                    control={<Radio />}\r\n                    label=\"Admin\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"S\"\r\n                    control={<Radio />}\r\n                    label=\"Staff\"\r\n                  />\r\n                </RadioGroup>\r\n\r\n                <Box style={{ marginTop: \"1rem\" }}>\r\n                  <Button onClick={() => updateUser(item.user_id)}>\r\n                    <Typography>Proceed</Typography>\r\n                  </Button>\r\n                  <Button onClick={() => setOpenPopUp(false)}>\r\n                    <Typography>Abort</Typography>\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </PopUp>\r\n          </Box>\r\n        ))}\r\n      <Grid container spacing={3} style={{ marginTop: \"4rem\" }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper>\r\n            <CustomToolbar variant=\"regular\" title=\"Staffs Available\" />\r\n            {!staffsAvailable > 0 && (\r\n              <ListItem>\r\n                <Typography variant=\"body2\" style={{ padding: \"0.5rem\" }}>\r\n                  No Records Available\r\n                </Typography>\r\n              </ListItem>\r\n            )}\r\n            {staffsAvailable.map((staff) => (\r\n              <ListItem\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Typography variant=\"body2\">\r\n                  {staff.fname} {staff.lname}\r\n                </Typography>\r\n                <Typography\r\n                  type=\"button\"\r\n                  variant=\"body2\"\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    setUserId(staff.user_id);\r\n                    // setPrevRole(staff.role);\r\n                    setDeletePopUp(true);\r\n                  }}\r\n                >\r\n                  <AiFillDelete size=\"20\" style={{ marginBottom: \"0.4rem\" }} />\r\n                </Typography>\r\n                <PopUp\r\n                  title=\"Demote Staff\"\r\n                  openPopup={deletePopUp}\r\n                  setOpenPopup={setDeletePopUp}\r\n                >\r\n                  <Typography color=\"error\">\r\n                    Note : Staff will be demoted to client and will be unable to\r\n                    use features available for staffs.\r\n                  </Typography>\r\n                  <Box marginTop=\"1rem\">\r\n                    <Button onClick={() => demoteStaffs()}>Procceed</Button>\r\n                    <Button onClick={() => setDeletePopUp(false)}>Abort</Button>\r\n                  </Box>\r\n                </PopUp>\r\n              </ListItem>\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Paper>\r\n            {!adminsAvailable > 0 && (\r\n              <ListItem>\r\n                <Typography variant=\"body2\" style={{ padding: \"0.5rem\" }}>\r\n                  No Records Available\r\n                </Typography>\r\n              </ListItem>\r\n            )}\r\n            <CustomToolbar variant=\"regular\" title=\"Admins\" />\r\n            {adminsAvailable.map((admin) => (\r\n              <ListItem\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n              >\r\n                <Typography variant=\"body2\">\r\n                  {admin.fname} {admin.lname}\r\n                </Typography>\r\n                <Typography\r\n                  type=\"button\"\r\n                  variant=\"body2\"\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    setUserId(admin.user_id);\r\n                    setDeletePopUp(true);\r\n                  }}\r\n                >\r\n                  <AiFillDelete size=\"20\" style={{ marginBottom: \"0.4rem\" }} />\r\n                </Typography>\r\n                <PopUp\r\n                  title=\"Demote Admin\"\r\n                  openPopup={deletePopUp}\r\n                  setOpenPopup={setDeletePopUp}\r\n                >\r\n                  <Typography color=\"error\">\r\n                    Note : Admin will be demoted to client and will be unable to\r\n                    use features available for Admins.\r\n                  </Typography>\r\n                  <Box marginTop=\"1rem\">\r\n                    <Button onClick={() => demoteAdmins()}>Procceed</Button>\r\n                    <Button onClick={() => setDeletePopUp(false)}>Abort</Button>\r\n                  </Box>\r\n                </PopUp>\r\n              </ListItem>\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-reducers.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useTableActions.js",["292","293","294","295","296","297","298"],"import { Box, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport PopUp from \"./PopUp\";\r\n\r\nimport { Form, Formik } from \"formik\";\r\nimport useCustomForm from \"./useCustomForm\";\r\nimport ImageUploader from \"./ImageUploader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteService,\r\n  fetchServices,\r\n  updateService,\r\n} from \"../../redux/Booking/booking-actions\";\r\nimport {\r\n  deleteProduct,\r\n  fetchProducts,\r\n  updateProduct,\r\n} from \"../../redux/Ecommerce/eStore-actions\";\r\nimport axios from \"axios\";\r\n\r\nexport default function useTableActions() {\r\n  const { CustomTextField } = useCustomForm();\r\n  const dispatch = useDispatch();\r\n  const updatedService = useSelector((state) => state.booking.services);\r\n  const updatedProduct = useSelector((state) => state.store.products);\r\n\r\n  const EditItem = (props) => {\r\n    const {\r\n      editPopUp,\r\n      setEditPopUp,\r\n      item,\r\n      imagePath,\r\n      route,\r\n      setRecords,\r\n      setIsLoading,\r\n    } = props;\r\n\r\n    const onSubmit = (values) => {\r\n      setIsLoading(true);\r\n      // console.log(values.image);\r\n      console.log(values.image);\r\n      let image_value = values.image === null ? \"old\" : values.image;\r\n      let data = new FormData();\r\n      data.append(\"name\", values.name);\r\n      data.append(\"price\", values.price);\r\n      data.append(\"description\", values.description);\r\n      data.append(\"id\", item.service_id);\r\n      data.append(\"image\", image_value);\r\n\r\n      if (route === \"updateService\") {\r\n        // setRecords(updatedService);\r\n        axios.post(\"/updateService\", data);\r\n        // .then((res) => dispatch(updateService()));\r\n        // dispatch(fetchServices());\r\n        axios.get(\"/addServices\").then((res) => {\r\n          setRecords(res.data.result);\r\n        });\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n          //  setRecords(updatedService);\r\n        }, 1500);\r\n      } else {\r\n        axios.post(\"/updateService\", data);\r\n\r\n        axios.get(\"/addProducts\").then((res) => setRecords(res.data.result));\r\n        // dispatch(fetchProducts());\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n          //  setRecords(updatedService);\r\n        }, 1500);\r\n        // setRecords(updatedProduct);\r\n      }\r\n      setEditPopUp(false);\r\n    };\r\n    return (\r\n      <PopUp\r\n        title=\"Edit Data\"\r\n        openPopup={editPopUp}\r\n        setOpenPopup={setEditPopUp}\r\n      >\r\n        <Box width=\"26rem\">\r\n          <Formik\r\n            initialValues={{\r\n              name: item.name,\r\n              price: item.price,\r\n              description: item.description,\r\n              image: null,\r\n            }}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({ errors, handleChange, values, setFieldValue }) => (\r\n              <Form>\r\n                <Grid container spacing={1} component=\"span\">\r\n                  <Grid item xs={4}>\r\n                    <Typography>Name</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <CustomTextField\r\n                      name=\"name\"\r\n                      variant=\"standard\"\r\n                      value={values.name}\r\n                      type=\"text\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography>Price</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <CustomTextField\r\n                      name=\"price\"\r\n                      variant=\"standard\"\r\n                      value={values.price}\r\n                      type=\"number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography>Description</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <CustomTextField\r\n                      name=\"description\"\r\n                      variant=\"standard\"\r\n                      multiline\r\n                      value={values.description}\r\n                      type=\"text\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <ImageUploader\r\n                      prevImageValue={`${imagePath}/${item.image}`}\r\n                      setFieldValue={setFieldValue}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Box display=\"flex\">\r\n                    <Button type=\"submit\">Save</Button>\r\n                    <Button onClick={() => setEditPopUp(false)}>Cancel</Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </PopUp>\r\n    );\r\n  };\r\n\r\n  const DeleteItem = (props) => {\r\n    const {\r\n      DeletePopUp,\r\n      setDeletePopUp,\r\n      item,\r\n      route,\r\n      setRecords,\r\n      setIsLoading,\r\n    } = props;\r\n\r\n    //to delete selected row\r\n    const DeleteData = (item) => {\r\n      setDeletePopUp(false);\r\n      setIsLoading(true);\r\n      if (route === \"deleteService\") {\r\n        dispatch(deleteService(item));\r\n        axios.get(\"/addServices\").then((res) => setRecords(res.data.result));\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n          //  setRecords(updatedService);\r\n        }, 1500);\r\n        // dispatch(fetchServices());\r\n      } else {\r\n        dispatch(deleteProduct(item));\r\n        axios.get(\"/addProducts\").then((res) => setRecords(res.data.result));\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n          //  setRecords(updatedService);\r\n        }, 1500);\r\n        // setRecords(updatedProduct);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <PopUp\r\n        title=\"Alert\"\r\n        openPopup={DeletePopUp}\r\n        setOpenPopup={setDeletePopUp}\r\n      >\r\n        <Box width=\"20rem\">\r\n          <Typography>\r\n            Deleting an item will remove all the records from our database.\r\n          </Typography>\r\n\r\n          <Box style={{ marginTop: \"1rem\" }}>\r\n            <Button>\r\n              <Typography color=\"error\" onClick={() => DeleteData(item)}>\r\n                Proceed\r\n              </Typography>\r\n            </Button>\r\n            <Button>\r\n              <Typography onClick={() => setDeletePopUp(false)}>\r\n                Abort\r\n              </Typography>\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </PopUp>\r\n    );\r\n  };\r\n\r\n  return { DeleteItem, EditItem };\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\LoginPage.js",["299","300","301"],"import {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nimport GLogin from \"./GLogin\";\r\nimport FLogin from \"./FLogin\";\r\n\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userData, authToken } from \"../../redux/Login/login-actions\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\nimport { fetchUserAppointment } from \"../../redux/Booking/booking-actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  contactContainer: { marginTop: \"10%\", marginBottom: \"10%\" },\r\n  paper: {\r\n    width: \"33rem\",\r\n    padding: \"2.5rem\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  submitBtn: {\r\n    textAlign: \"center\",\r\n    marginTop: \"1.4rem\",\r\n  },\r\n  signIn: {\r\n    marginTop: \"-1rem\",\r\n    paddingBottom: \"1rem\",\r\n    marginLeft: \"18rem\",\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"inherit\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().email().required(\"Invalid Email!!\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n  loggedIn: false,\r\n};\r\n\r\nfunction LoginPage() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const Token = useSelector((state) => state.login.authToken);\r\n  const userData = useSelector((state) => state.login.userData);\r\n  const { CustomTextField } = useCustomForm();\r\n\r\n  const onSubmit = (values) => {\r\n    axios\r\n      .post(\"/login\", {\r\n        values,\r\n      })\r\n      .then((response) => {\r\n        setResponse(response.data.message);\r\n        setSnackType(response.data.type);\r\n        if (response.data.auth === true) {\r\n          setTimeout(() => {\r\n            history.goBack();\r\n          }, 1500);\r\n          dispatch(userData(response.data.result));\r\n          dispatch(authToken(response.data.token));\r\n        }\r\n      });\r\n    let id;\r\n    userData !== undefined && userData.map((item) => (id = item.user_id));\r\n    dispatch(fetchUserAppointment(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/login\").then((response) => {\r\n      let id;\r\n      userData !== undefined && userData.map((item) => (id = item.user_id));\r\n      dispatch(fetchUserAppointment(id));\r\n      if (response.data.loggedIn === true && Token != null) {\r\n        setSnackbar(true);\r\n        setResponse(response.data.message);\r\n        setSnackType(response.data.type);\r\n        response.data.type === \"info\" &&\r\n          setTimeout(() => {\r\n            history.goBack();\r\n          }, 1500);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const userAuthenticated = async () => {\r\n    await axios\r\n      .get(\"/isUserAuth\")\r\n      .then((response) => {\r\n        response.data.auth === true &&\r\n          setTimeout(() => {\r\n            history.goBack();\r\n          }, 1500);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios.defaults.headers.common[\"authorization\"] = Token;\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.contactContainer}>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        WELCOME\r\n      </Typography>\r\n      <Box className={classes.box}>\r\n        <Paper className={classes.paper}>\r\n          <Link to=\"/signup\" className={classes.link}>\r\n            <Typography\r\n              align=\"right\"\r\n              type=\"button\"\r\n              variant=\"body2\"\r\n              className={classes.signIn}\r\n            >\r\n              Create an account\r\n            </Typography>\r\n          </Link>\r\n          {response && response.length > 0 && (\r\n            <CustomSnackbar\r\n              snackbarOpen={snackbar}\r\n              setSnackbar={setSnackbar}\r\n              snackType={snackType}\r\n              snackContent={response}\r\n            />\r\n          )}\r\n\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={LoginSchema}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize={false}\r\n          >\r\n            {({ errors, handleChange, touched, values, setFieldValue }) => (\r\n              <Form>\r\n                <Grid container spacing={4}>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      label=\"Your Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      error={errors.email && touched.email}\r\n                      onChange={handleChange}\r\n                      errortext={errors.email}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      error={errors.password && touched.password}\r\n                      onChange={handleChange}\r\n                      errortext={errors.password}\r\n                    />\r\n                  </Grid>\r\n                  {/* <Box>\r\n                    <Typography component=\"div\">\r\n                      <Checkbox\r\n                        className={classes.checkbox}\r\n                        color=\"default\"\r\n                        value={values.loggedIn}\r\n                        onChange={(value) => setFieldValue(\"loggedIn\", true)}\r\n                      />\r\n                      Keep me logged in.\r\n                    </Typography>\r\n                  </Box> */}\r\n                </Grid>\r\n                <Box textAlign=\"center\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    className={classes.submitBtn}\r\n                    onClick={() => {\r\n                      userAuthenticated();\r\n                      setSnackbar(true);\r\n                    }}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <hr style={{ backgroundColor: \"white\" }} />\r\n          <Box textAlign=\"center\">\r\n            <GLogin\r\n              setSnackbar={setSnackbar}\r\n              setResponse={setResponse}\r\n              setSnackType={setSnackType}\r\n            />\r\n            {/* <FLogin /> */}\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     isLoggedIn: (message) => dispatch(isLoggedIn(message)),\r\n//     userData: (message) => dispatch(userData(message)),\r\n//   };\r\n// };\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-reducers.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-actions.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-types.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\ProfilePic.js",["302","303","304"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Avatar, makeStyles, Badge, Box } from \"@material-ui/core\";\r\n\r\nimport { AiFillCamera } from \"react-icons/ai\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { updateProfile } from \"../../redux/Login/login-actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgSize: {\r\n    width: theme.spacing(16),\r\n    height: theme.spacing(16),\r\n  },\r\n  box: {\r\n    marginTop: theme.spacing(10),\r\n  },\r\n  //change image icon\r\n  changeImg: {\r\n    backgroundColor: \"green\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    borderRadius: \"1rem\",\r\n    overflow: \"hidden\",\r\n    \"&:hover\": {\r\n      width: \"3.8rem\",\r\n      height: \"2rem\",\r\n    },\r\n  },\r\n  profileName: {\r\n    marginTop: \"0.7rem\",\r\n    marginLeft: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nexport default function ProfilePic({ source, userId }) {\r\n  const classes = useStyles();\r\n\r\n  const { ImageInput } = useCustomForm();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [icon, setIcon] = useState(<AiFillCamera size={18} />);\r\n  const [image, setImage] = useState(\r\n    source != null ? require(`../../images/profile/${source}`).default : null\r\n  );\r\n\r\n  const BadgeComponent = () => {\r\n    const addImage = (e) => {\r\n      const target = e.target.files[0];\r\n      const url = URL.createObjectURL(target);\r\n      setImage(url);\r\n      setIcon(<AiFillCamera size={18} />);\r\n      let data = new FormData();\r\n\r\n      data.append(\"profile\", target);\r\n      data.append(\"id\", userId);\r\n\r\n      // axios.post(`/profileImage`, data).then((res) => console.log(res));\r\n      dispatch(updateProfile(data));\r\n    };\r\n    return (\r\n      <Box\r\n        type=\"button\"\r\n        className={classes.changeImg}\r\n        onMouseEnter={() => {\r\n          setIcon(\r\n            <ImageInput\r\n              styling={{ marginTop: \"0.5rem\" }}\r\n              onChange={(e) => addImage(e)}\r\n            >\r\n              <Typography variant=\"caption\" style={{ padding: \"1rem\" }}>\r\n                Change\r\n              </Typography>\r\n            </ImageInput>\r\n          );\r\n        }}\r\n        onMouseLeave={() => {\r\n          setIcon(<AiFillCamera size={18} />);\r\n        }}\r\n      >\r\n        {icon}\r\n      </Box>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Box className={classes.box} display=\"flex\" justifyContent=\"center\">\r\n        <Badge\r\n          overlap=\"circle\"\r\n          badgeContent={<BadgeComponent />}\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n        >\r\n          <Avatar alt=\"profile\" src={image} className={classes.imgSize} />\r\n        </Badge>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Navbar\\Navbar.js",["305","306"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  AppBar,\r\n  Drawer,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Badge,\r\n  Paper,\r\n  Avatar,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport {\r\n  AiOutlineShoppingCart,\r\n  AiOutlineLogout,\r\n  AiOutlineCloseCircle,\r\n} from \"react-icons/ai\";\r\nimport { HiOutlineUserCircle } from \"react-icons/hi\";\r\nimport { IoIosMenu } from \"react-icons/io\";\r\n\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\nimport useWindowScrollPosition from \"@rehooks/window-scroll-position\";\r\n\r\nimport \"../scss/navbar.scss\";\r\nimport MenuDropdown from \"../common/MenuDropdown\";\r\nimport { logout, userData } from \"../../redux/Login/login-actions\";\r\n\r\nfunction Navbar({ cart, userData }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [change, setChange] = useState(false);\r\n  const changePosition = 80;\r\n\r\n  //for showing navbar on slide\r\n  let position = useWindowScrollPosition();\r\n\r\n  if (position.y > changePosition && !change) {\r\n    setChange(true);\r\n  }\r\n  if (position.y <= changePosition && change) {\r\n    setChange(false);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [cartCount, setCartCount] = useState(null);\r\n  //hook to show number of item in cart\r\n  useEffect(() => {\r\n    let count = 0;\r\n    cart.forEach((item) => (count += item.qty));\r\n    setCartCount(count);\r\n  }, [cart, cartCount]);\r\n\r\n  //style\r\n  let appBarStyle = {\r\n    backgroundColor: change ? \"black\" : \"transparent\",\r\n    transition: \"600ms ease\",\r\n    boxShadow: \"none\",\r\n  };\r\n\r\n  let navLinkStyle = {\r\n    color: change ? \"white\" : \"white\",\r\n    fontWeight: \"bold\",\r\n    letterSpacing: \"3px\",\r\n  };\r\n\r\n  const handleDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const NavLink = ({ path, children }) => {\r\n    return (\r\n      <li>\r\n        <Link className=\"link\" smooth to={path}>\r\n          <Typography component=\"span\" style={navLinkStyle} variant=\"body1\">\r\n            {children}\r\n          </Typography>\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar sticky=\"true\" style={appBarStyle}>\r\n        <Container>\r\n          <Grid container component=\"div\" style={{ paddingTop: \"1.3rem\" }}>\r\n            <Grid item xs={3} sm={2}>\r\n              <Link to=\"/\">\r\n                <Box\r\n                  height=\"3rem\"\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  marginTop=\"-0.8rem\"\r\n                  marginLeft=\"1.5rem\"\r\n                >\r\n                  <img\r\n                    src={require(\"../../images/other/logo-white.png\").default}\r\n                    alt=\"logo\"\r\n                  />\r\n                </Box>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={7} sm={8}>\r\n              <ul className=\"nav-ul d-none  d-md-flex\">\r\n                <NavLink path=\"/#\">HOME</NavLink>\r\n                <NavLink path=\"/#services\">SERVICES</NavLink>\r\n                <NavLink path=\"/store\">STORE</NavLink>\r\n                <NavLink path=\"/#contact\">CONTACT</NavLink>\r\n              </ul>\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} className=\"d-none d-sm-flex\">\r\n              <ul className=\"icons-ul \">\r\n                <li style={{ fontWeight: \"bold\", letterSpacing: \"3px\" }}>\r\n                  <Box className=\"dropdown-icon\">\r\n                    <HiOutlineUserCircle size={22} />\r\n                    <Paper\r\n                      className=\"dropdown-content-profile\"\r\n                      component=\"span\"\r\n                    >\r\n                      <Link to=\"/user\" className=\"link\">\r\n                        <Box\r\n                          padding=\"0.5rem\"\r\n                          display=\"flex\"\r\n                          component=\"span\"\r\n                          className=\"icon-styless\"\r\n                        >\r\n                          {userData.length > 0 ? (\r\n                            userData.map((item) => (\r\n                              <Avatar\r\n                                key={item.user_id}\r\n                                style={{ width: \"1.7rem\", height: \"1.7rem\" }}\r\n                                src={\r\n                                  item.image != null\r\n                                    ? require(`../../images/profile/${item.image}`)\r\n                                        .default\r\n                                    : null\r\n                                }\r\n                              />\r\n                            ))\r\n                          ) : (\r\n                            <Avatar\r\n                              style={{ width: \"1.7rem\", height: \"1.7rem\" }}\r\n                            />\r\n                          )}\r\n\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            style={{\r\n                              marginLeft: \"0.6rem\",\r\n                              marginTop: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            {userData.length > 0 ? (\r\n                              userData.map((item) => (\r\n                                <span key={item.user_id}>{item.fname}</span>\r\n                              ))\r\n                            ) : (\r\n                              <span>Profile</span>\r\n                            )}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Link>\r\n                      <Divider />\r\n                      <Box\r\n                        component=\"div\"\r\n                        padding=\"0.3rem\"\r\n                        marginLeft=\"0.4rem\"\r\n                        display=\"flex\"\r\n                        className=\"icon-styless\"\r\n                        onClick={() => dispatch(logout())}\r\n                      >\r\n                        {userData.length > 0 ? (\r\n                          userData.map((item) => (\r\n                            <Link to=\"\" key={item.user_id} className=\"link\">\r\n                              <AiOutlineLogout size={22} />\r\n                              <Typography\r\n                                component=\"span\"\r\n                                variant=\"body2\"\r\n                                style={{\r\n                                  marginLeft: \"0.8rem\",\r\n                                }}\r\n                              >\r\n                                Logout\r\n                              </Typography>\r\n                            </Link>\r\n                          ))\r\n                        ) : (\r\n                          <Link to=\"/login\" className=\"link\">\r\n                            <AiOutlineLogout size={22} />\r\n                            <Typography\r\n                              component=\"span\"\r\n                              variant=\"body2\"\r\n                              style={{\r\n                                marginLeft: \"0.8rem\",\r\n                              }}\r\n                            >\r\n                              LogIn\r\n                            </Typography>\r\n                          </Link>\r\n                        )}\r\n                      </Box>\r\n                    </Paper>\r\n                  </Box>\r\n                </li>\r\n\r\n                <NavLink path=\"/cart\">\r\n                  <Badge color=\"error\" badgeContent={cartCount}>\r\n                    <AiOutlineShoppingCart size={22} />\r\n                  </Badge>\r\n                </NavLink>\r\n              </ul>\r\n            </Grid>\r\n          </Grid>\r\n          <IoIosMenu\r\n            size={26}\r\n            onClick={handleDrawer}\r\n            style={{ marginTop: \"-2.5rem\" }}\r\n            className=\"d-flex d-sm-none menu-icon\"\r\n          />\r\n        </Container>\r\n      </AppBar>\r\n      <Drawer anchor=\"right\" open={open} onClose={handleClose}>\r\n        <Box style={{ width: \"16.5rem\" }}>\r\n          <Container style={{ marginTop: \"1rem\" }}>\r\n            <Typography variant=\"h6\" component=\"span\">\r\n              <AiOutlineCloseCircle style={{ marginBottom: \"0.3rem\" }} /> Close\r\n            </Typography>\r\n            <hr\r\n              style={{\r\n                marginTop: \"0.3rem\",\r\n                marginBottom: \"0.5rem\",\r\n                backgroundColor: \"white\",\r\n              }}\r\n            />\r\n            <ul className=\"drawer-navlinks\">\r\n              <li>\r\n                <Link path=\"/#\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">HOME</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/#services\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">SERVICES</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/store\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">STORE</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/#contact\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">CONTACT</Typography>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </Container>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.store.cart,\r\n    userData: state.login.userData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\About.js",["307"],"import { Grid, Box, Typography, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction About() {\r\n  return (\r\n    <Container style={{ marginTop: \"10%\", marginBottom: \"10%\" }}>\r\n      <Grid container spacing={4} style={{ padding: \"1rem\" }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Box style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <img\r\n              src=\"https://images.unsplash.com/photo-1517800249805-f3d51bd0b07f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1032&q=80\"\r\n              alt=\"about-us\"\r\n              width=\"100%\"\r\n              style={{ filter: \"brightness(90%)\" }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Box>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              Who are We\r\n            </Typography>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Our salon is the territory created for men and women who\r\n              appreciate high quality, impeccable service, and the perfect look.\r\n            </Typography>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Welcome to Nepa De Salon\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\ImageUploader.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\store.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\ShowItem.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\OurServices.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\UserProfile.js",["308","309","310","311"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\n\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { FaPenSquare } from \"react-icons/fa\";\r\n\r\nimport ProfilePic from \"../common/ProfilePic\";\r\nimport CustomToolbar from \"../common/CustomToolbar\";\r\n\r\nimport EditDetails from \"./EditDetails\";\r\nimport useSettings from \"./useSettings\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  profileName: {\r\n    marginTop: \"0.7rem\",\r\n    marginLeft: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nfunction UserProfile() {\r\n  const classes = useStyles();\r\n  const { ChangePassword, DeleteAccount } = useSettings();\r\n\r\n  const [DetailPopUp, setDetailPopUp] = useState(false);\r\n\r\n  const [deletePopUp, setDeletePopUp] = useState(false);\r\n\r\n  const userData = useSelector((state) => state.login.userData);\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  console.log(response);\r\n  const GridContent = ({ children, xs }) => {\r\n    return (\r\n      <Grid item xs={xs}>\r\n        <Typography variant=\"body2\" style={{ paddingBottom: \"0.5rem\" }}>\r\n          {children}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const FlexContent = ({ name, children, color = \"inherit\", onClick }) => {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        type=\"button\"\r\n        justifyContent=\"space-between\"\r\n        onClick={onClick}\r\n      >\r\n        <Typography\r\n          color={color}\r\n          variant=\"body2\"\r\n          style={{ paddingBottom: \"0.7rem\" }}\r\n        >\r\n          {name}\r\n        </Typography>\r\n        <Typography color={color}>{children}</Typography>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {response && response.length > 0 && (\r\n        <CustomSnackbar\r\n          snackbarOpen={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackType={snackType}\r\n          snackContent={response}\r\n        />\r\n      )}\r\n      {userData &&\r\n        userData.map((item) => (\r\n          <div key={item.user_id}>\r\n            <ProfilePic source={item.image} userId={item.user_id} />\r\n            <Typography\r\n              variant=\"h6\"\r\n              className={classes.profileName}\r\n              align=\"center\"\r\n            >\r\n              {item.fname} {item.lname}\r\n            </Typography>\r\n\r\n            <Grid\r\n              container\r\n              component=\"div\"\r\n              spacing={4}\r\n              style={{ marginTop: \"1rem\" }}\r\n            >\r\n              <Grid item xs={12} sm={6}>\r\n                <Paper>\r\n                  <CustomToolbar button=\"true\" title=\"Personal Details\">\r\n                    <Button onClick={() => setDetailPopUp(true)}>\r\n                      <FaPenSquare size={20} />\r\n                    </Button>\r\n                  </CustomToolbar>\r\n                  {/* to open popup */}\r\n                  <EditDetails\r\n                    detailPopUp={DetailPopUp}\r\n                    setDetailPopUp={setDetailPopUp}\r\n                    data={item}\r\n                    setResponse={setResponse}\r\n                    setSnackType={setSnackType}\r\n                    setSnackbar={setSnackbar}\r\n                  />\r\n\r\n                  <Box\r\n                    style={{\r\n                      padding: \"0.5rem 1.5rem 1rem 1.5rem\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Name</GridContent>\r\n                      <GridContent xs={6}>\r\n                        {item.fname} {item.lname}\r\n                      </GridContent>\r\n                    </Grid>\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Email</GridContent>\r\n                      <GridContent xs={6}>{item.email}</GridContent>\r\n                    </Grid>\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Birthday</GridContent>\r\n                      <GridContent xs={6}>\r\n                        {item.dob ? item.dob : <>-</>}\r\n                      </GridContent>\r\n                    </Grid>\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Contact</GridContent>\r\n                      <GridContent xs={6}>\r\n                        {item.phone ? item.phone : <>-</>}\r\n                      </GridContent>\r\n                    </Grid>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              {/* settings */}\r\n              <Grid item xs={12} sm={6}>\r\n                <Paper>\r\n                  <CustomToolbar title=\"Account Settings\" />\r\n                  <Box style={{ padding: \"0.5rem 1.5rem 0.5rem 1.5rem\" }}>\r\n                    {/* <FlexContent name=\"Change Password\">\r\n                <IoIosRepeat size={18} />\r\n              </FlexContent> */}\r\n                    <FlexContent\r\n                      color=\"error\"\r\n                      name=\"Delete Account\"\r\n                      onClick={() => {\r\n                        setDeletePopUp(true);\r\n                      }}\r\n                    >\r\n                      <AiFillDelete size={18} />\r\n                    </FlexContent>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <DeleteAccount\r\n              deletePopUp={deletePopUp}\r\n              setDeletePopUp={setDeletePopUp}\r\n              userId={item.user_id}\r\n            />\r\n\r\n            {/* <PopUp\r\n        openPopUp={deletePopUp}\r\n        setOpenPopUp={setDeletePopUp}\r\n        title=\"Alert\"\r\n      >\r\n        <Box width=\"12rem\">\r\n          <Typography>\r\n            Deleting your account will remove all the records from our database.\r\n          </Typography>\r\n          <Button>Proceed</Button>\r\n          <Button>Abort</Button>\r\n        </Box>\r\n      </PopUp> */}\r\n\r\n            {/* recent activities */}\r\n            {item.role === \"C\" && (\r\n              <Paper style={{ marginTop: \"2rem\" }}>\r\n                <CustomToolbar title=\"Recent Activities\" />\r\n                <Toolbar>No Recent Activities</Toolbar>\r\n              </Paper>\r\n            )}\r\n            {item.role === \"S\" && (\r\n              <Paper style={{ marginTop: \"2rem\" }}>\r\n                <CustomToolbar title=\"Recent Activities\" />\r\n                <Toolbar>No Recent Activities</Toolbar>\r\n              </Paper>\r\n            )}\r\n          </div>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\nexport default withRouter(UserProfile);\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ShortDetails.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\EditDetails.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\OurTeam.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\MenuDropdown.js",["312","313"],"import React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  Avatar,\r\n  withStyles,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function MenuDropdown({ anchorEl, setAnchorEl }) {\r\n  const StyledMenu = withStyles({\r\n    paper: {\r\n      marginTop: \"2rem\",\r\n      marginLeft: \"1rem\",\r\n      float: \"right\",\r\n    },\r\n  })((props) => <Menu elevation={0} getContentAnchorEl={null} {...props} />);\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div>\r\n      <StyledMenu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Box display=\"flex\" width=\"10rem\" flexDirection=\"column\">\r\n          <MenuItem>\r\n            <Avatar />\r\n            <Typography variant=\"body2\">Email</Typography>\r\n          </MenuItem>\r\n          <Divider />\r\n          <MenuItem>\r\n            <Typography variant=\"body2\">Logout</Typography>\r\n          </MenuItem>\r\n        </Box>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useCustomForm.js",["314","315","316","317","318","319","320","321"],"import React, { useState } from \"react\";\r\nimport {\r\n  createMuiTheme,\r\n  makeStyles,\r\n  MuiThemeProvider,\r\n  TextField,\r\n  Typography,\r\n  Box,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  DateTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { Select } from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/core\";\r\nimport { List } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    color: \"#f44336\",\r\n  },\r\n}));\r\nconst customTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#87CEFA\",\r\n    },\r\n    secondary: {\r\n      main: \"#fff\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"Quicksand\",\r\n  },\r\n});\r\n\r\nexport default function useCustomForm() {\r\n  const classes = useStyles();\r\n\r\n  const ErrorField = ({ children }) => (\r\n    <Typography className={classes.error}>{children}</Typography>\r\n  );\r\n\r\n  const CustomTextField = (props) => {\r\n    const {\r\n      variant = \"outlined\",\r\n      label,\r\n      name,\r\n      type,\r\n      error,\r\n      onChange,\r\n      errortext,\r\n      ...rest\r\n    } = props;\r\n\r\n    return (\r\n      <TextField\r\n        {...rest}\r\n        label={label}\r\n        variant={variant}\r\n        size=\"small\"\r\n        color=\"secondary\"\r\n        fullWidth\r\n        name={name}\r\n        type={type}\r\n        error={error}\r\n        onChange={onChange}\r\n        helperText={error ? <ErrorField>{errortext}</ErrorField> : null}\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n\r\n  // const SearchBox = (props) => {\r\n  //   const { label, type, placeholder, value, onChange } = props;\r\n  //   return (\r\n  //     <TextField\r\n  //       label={label}\r\n  //       type={type}\r\n  //       value={value}\r\n  //       placeholder={placeholder}\r\n  //       onChange={onChange}\r\n  //       {...props}\r\n  //       variant=\"outlined\"\r\n  //       size=\"small\"\r\n  //       color=\"secondary\"\r\n  //       fullWidth\r\n  //       inputProps={{\r\n  //         maxLength: 15,\r\n  //       }}\r\n  //       InputProps={{\r\n  //         startAdornment: (\r\n  //           <InputAdornment position=\"start\">\r\n  //             <BsSearch />\r\n  //           </InputAdornment>\r\n  //         ),\r\n  //       }}\r\n  //     />\r\n  //   );\r\n  // };\r\n\r\n  const CustomDatePicker = (props) => {\r\n    const { name, value, label, error, onChange } = props;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={customTheme}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            autoOk\r\n            {...props}\r\n            color=\"secondary\"\r\n            format=\"yyyy-dd-MM\"\r\n            size=\"small\"\r\n            onChange={onChange}\r\n            error={error}\r\n            helperText={\r\n              error ? <ErrorField>Date is required</ErrorField> : null\r\n            }\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </MuiThemeProvider>\r\n    );\r\n  };\r\n\r\n  const CustomDateTime = (props) => {\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    const { name, label } = props;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={customTheme}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <DateTimePicker\r\n            label={label}\r\n            name={name}\r\n            autoOk\r\n            {...props}\r\n            inputVariant=\"outlined\"\r\n            value={selectedDate}\r\n            color=\"secondary\"\r\n            onChange={handleDateChange}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </MuiThemeProvider>\r\n    );\r\n  };\r\n\r\n  const ImageInput = (props) => {\r\n    const { children, styling, onChange } = props;\r\n\r\n    return (\r\n      <>\r\n        <label htmlFor=\"add\" type=\"button\" style={styling}>\r\n          {children}\r\n        </label>\r\n        <input\r\n          id=\"add\"\r\n          type=\"file\"\r\n          name=\"profile\"\r\n          accept=\"image/*\"\r\n          style={{ display: \"none\" }}\r\n          onChange={onChange}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const DropdownSelect = (props) => {\r\n    const { array, id, title, defaultValue, name, onChange, ...rest } = props;\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"caption\">{title}</Typography>\r\n        <br />\r\n        <select\r\n          name={name}\r\n          htmlFor={id}\r\n          onChange={onChange}\r\n          {...rest}\r\n          style={{\r\n            backgroundColor: \"#424242\",\r\n            border: \"none\",\r\n            color: \"white\",\r\n            width: \"18rem\",\r\n            height: \"2.3rem\",\r\n            borderRadius: \"0.4rem\",\r\n            marginBottom: \"1rem\",\r\n          }}\r\n        >\r\n          <option\r\n            id={id}\r\n            value=\"\"\r\n            label=\"- - - - - - - \"\r\n            style={{ color: \"white\", border: \"none\" }}\r\n          />\r\n\r\n          {array.map((item) => (\r\n            <option\r\n              id={id}\r\n              value={item.value}\r\n              key={item.id}\r\n              style={{ color: \"white\", border: \"none\" }}\r\n              label={item.value}\r\n            />\r\n          ))}\r\n        </select>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return {\r\n    CustomTextField,\r\n    ImageInput,\r\n    // SearchBox,\r\n    CustomDatePicker,\r\n    CustomDateTime,\r\n    DropdownSelect,\r\n  };\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\useSettings.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\GoogleMap.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\StaffProfile.js",["322"],"import React from \"react\";\r\nimport ProfilePic from \"../common/ProfilePic\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  makeStyles,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport CustomToolbar from \"../common/CustomToolbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function StaffProfile() {\r\n  const classes = useStyles();\r\n\r\n  const userData = useSelector((state) => state.login.userData);\r\n  const GridContent = ({ children, xs }) => {\r\n    return (\r\n      <Grid item xs={xs}>\r\n        <Typography variant=\"body2\" style={{ paddingBottom: \"0.5rem\" }}>\r\n          {children}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  };\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <UserProfile />\r\n      {userData.map((item) => (\r\n        <div key={item.user_id}>\r\n          <ProfilePic source={item.image} userId={item.user_id} />\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            {item.name}\r\n          </Typography>\r\n\r\n          <Grid container spacing={2} style={{ marginTop: \"1rem\" }}>\r\n            <Grid item sm={5}>\r\n              <Paper>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <CustomToolbar title=\"Personal Details\" />\r\n                    <Box\r\n                      style={{\r\n                        padding: \"0.5rem 1.5rem 1rem 1.5rem\",\r\n                        overflow: \"hidden\",\r\n                      }}\r\n                    >\r\n                      <Grid container component=\"div\">\r\n                        <GridContent xs={4}>Name</GridContent>\r\n                        <GridContent xs={6}>\r\n                          {item.fname} {item.lname}\r\n                        </GridContent>\r\n                      </Grid>\r\n                      <Grid container component=\"div\">\r\n                        <GridContent xs={4}>Email</GridContent>\r\n                        <GridContent xs={6}>{item.email}</GridContent>\r\n                      </Grid>\r\n                      <Grid container component=\"div\">\r\n                        <GridContent xs={4}>Birthday</GridContent>\r\n                        <GridContent xs={6}>\r\n                          {item.dob ? item.dob : <>-</>}\r\n                        </GridContent>\r\n                      </Grid>\r\n                      <Grid container component=\"div\">\r\n                        <GridContent xs={4}>Contact</GridContent>\r\n                        <GridContent xs={6}>\r\n                          {item.phone ? item.phone : <>-</>}\r\n                        </GridContent>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item sm={7}>\r\n              <Paper>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <CustomToolbar title=\"Upcoming Bookings\" />\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Paper>\r\n                <CustomToolbar title=\"Time Available\" />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-types.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-reducers.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-actions.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\Inventory.js",["323","324"],"import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../scss/inventory.scss\";\r\nimport {\r\n  fetchProducts,\r\n  loadCurrentItem,\r\n} from \"../../redux/Ecommerce/eStore-actions\";\r\n\r\nfunction Inventory({ products, fetchProducts, loadCurrentItem }) {\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ marginTop: \"8rem\" }}>\r\n      <Grid container spacing={2}>\r\n        {products.map((item) => (\r\n          <Grid\r\n            key={item.product_id}\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={3}\r\n            style={{ marginTop: \"1.5rem\" }}\r\n          >\r\n            <Paper className=\"product-container\">\r\n              <Box className=\"image-container\">\r\n                <img\r\n                  src={require(`../../images/products/${item.image}`).default}\r\n                  alt=\"product-img\"\r\n                  className=\"image\"\r\n                />\r\n              </Box>\r\n              <Box textAlign=\"center\" marginTop=\"0.3rem\">\r\n                <Typography align=\"center\" variant=\"body1\">\r\n                  {item.name}\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"body1\">\r\n                  Rs. {item.price}\r\n                </Typography>\r\n                <Link\r\n                  to={`/store/${item.product_id}`}\r\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  onClick={() => loadCurrentItem(item)}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      marginBottom: \"0.6rem\",\r\n                      backgroundColor: \"green\",\r\n                      marginTop: \"0.3rem\",\r\n                      width: \"9rem\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"caption\">VIEW ITEM</Typography>\r\n                  </Button>\r\n                </Link>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.store.products,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadCurrentItem: (item) => dispatch(loadCurrentItem(item)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { loadCurrentItem, fetchProducts })(\r\n  Inventory\r\n);\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\Cart.js",["325","326","327","328"],"import {\r\n  Box,\r\n  Container,\r\n  Toolbar,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch, connect } from \"react-redux\";\r\nimport { removeFromCart } from \"../../redux/Ecommerce/eStore-actions\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: \"6rem\",\r\n  },\r\n  paper: {\r\n    marginTop: \"2rem\",\r\n    maxHeight: \"10rem\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      color: \"grey\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Cart({ cart, removeFromCart }) {\r\n  const classes = useStyles();\r\n\r\n  // const [btnClick, setBtnClick] = useState(false);\r\n\r\n  // const cart = useSelector((state) => state.store.cart);\r\n  // const dispatch = useDispatch(removeFromCart(item));\r\n\r\n  // const handleDelete = (item) => {\r\n  //   setBtnClick(true);\r\n\r\n  // };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <Paper>\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"body1\">CART SUMMARY</Typography>\r\n        </Toolbar>\r\n      </Paper>\r\n      <Grid container spacing={3}>\r\n        {cart.length > 0 ? (\r\n          cart.map((item) => (\r\n            <Grid key={item.product_id} item xs={12} sm={8}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container spacing={2} style={{ padding: \"1rem\" }}>\r\n                  <Grid item xs={5}>\r\n                    <Box\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                      paddingLeft=\"0.5rem\"\r\n                      height=\"70px\"\r\n                      overflow=\"hidden\"\r\n                    >\r\n                      <img\r\n                        src={\r\n                          require(`../../images/products/${item.image}`).default\r\n                        }\r\n                        alt=\"product\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"body1\">{item.name}</Typography>\r\n                    <Typography variant=\"body2\">Rs. {item.price}</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Quantity : {item.qty}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Typography variant=\"body2\">\r\n                      Total = {item.price * item.qty}\r\n                    </Typography>\r\n                    <Typography\r\n                      type=\"button\"\r\n                      color=\"error\"\r\n                      variant=\"body2\"\r\n                      className={classes.deleteBtn}\r\n                      onClick={() => removeFromCart(item.product_id)}\r\n                    >\r\n                      Remove\r\n                      <AiFillDelete\r\n                        style={{ marginLeft: \"0.4rem\" }}\r\n                        size={15}\r\n                      />\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Box padding=\"0.5rem\" textAlign=\"center\">\r\n                <Typography variant=\"body2\" style={{ color: \"lightGrey\" }}>\r\n                  No items in the cart.{\" \"}\r\n                  <Link className={classes.link} to=\"/store\">\r\n                    VISIT STORE\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {cart.length > 0 && (\r\n          <Grid item xs={12} sm={4}>\r\n            <Paper>\r\n              <Box padding=\"1.2rem\" marginTop=\"1.5rem\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={8}>\r\n                    <Typography variant=\"body2\">Price : {}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"body2\">Price : {}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography align=\"left\" variant=\"body2\">\r\n                      VAT\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    {\" \"}\r\n                    <Typography align=\"left\" variant=\"body2\">\r\n                      13%\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography variant=\"body2\">Total Amount: {}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"body2\"> sa{}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box\r\n                  marginTop=\"0.5rem\"\r\n                  marginBottom=\"-0.4rem\"\r\n                  textAlign=\"center\"\r\n                >\r\n                  <Link className={classes.link} to=\"/payment\">\r\n                    <Button style={{ backgroundColor: \"teal\" }}>\r\n                      Checkout\r\n                    </Button>\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.store.cart,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeFromCart: (item) => dispatch(removeFromCart(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Payment\\Payment.js",["329","330"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"../scss/payment.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useKhaltiCheckout from \"./useKhaltiCheckout\";\r\n\r\nexport default function Payment() {\r\n  const { checkout } = useKhaltiCheckout();\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: \"9rem\" }}>\r\n      <Typography align=\"center\" variant=\"h5\">\r\n        Choose your preferred payment method{\" \"}\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        alignItems=\"center\"\r\n        style={{ marginTop: \"3rem\" }}\r\n      >\r\n        <Grid item xs={6}>\r\n          <Link to=\"/\">\r\n            <Paper className=\"paper\">\r\n              <img\r\n                src={require(\"../../images/other/cash-in-hand.png\").default}\r\n                alt=\"cash in hand\"\r\n                className=\"image-payment\"\r\n              />\r\n            </Paper>\r\n          </Link>\r\n          <Typography align=\"center\" variant=\"h6\" className=\"text\">\r\n            Cash in Hand\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className=\"paper\" onClick={() => checkout()}>\r\n            <img\r\n              src={require(\"../../images/other/online-payment.png\").default}\r\n              alt=\"online payment\"\r\n              className=\"image-payment\"\r\n            />\r\n          </Paper>\r\n\r\n          <Typography align=\"center\" variant=\"h6\" className=\"text\">\r\n            Online Payment\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\index.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\ProductsTable.js",["331","332"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { forwardRef } from \"react\";\r\nimport AddItem from \"../common/AddItem\";\r\nimport useTableActions from \"../common/useTableActions\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProducts } from \"../../redux/Ecommerce/eStore-actions\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  DeleteIcon: forwardRef((props, ref) => (\r\n    <DeleteOutline {...props} ref={ref} />\r\n  )),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nexport default function ProductsTable() {\r\n  //state for delete and edit popup for selected row\r\n  const [DeletePopUp, setDeletePopUp] = useState(false);\r\n  const [editPopUp, setEditPopUp] = useState(false);\r\n\r\n  //to send the item to edit or delete\r\n  const [actionItem, setActionItem] = useState({});\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const products = useSelector((state) => state.store.products);\r\n\r\n  //store array from database\r\n  const [records, setRecords] = useState(products);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      dispatch(fetchProducts());\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, [records]);\r\n\r\n  const { DeleteItem, EditItem } = useTableActions();\r\n  return (\r\n    <AdminDashboard>\r\n      <AddItem\r\n        title=\"Add Product\"\r\n        postRoute=\"addProducts\"\r\n        setIsLoading={setIsLoading}\r\n        setRecords={setRecords}\r\n      />\r\n      <MaterialTable\r\n        title=\"Product Table\"\r\n        icons={tableIcons}\r\n        isLoading={isLoading}\r\n        columns={[\r\n          {\r\n            field: \"tableData.id + 1\",\r\n            title: \"Id\",\r\n            render: (rowData) => {\r\n              return <p>{rowData.tableData.id + 1}</p>;\r\n            },\r\n          },\r\n          { field: \"name\", title: \" Product Name\" },\r\n          { field: \"price\", title: \"Price\" },\r\n          {\r\n            field: \"image\",\r\n            title: \"Image\",\r\n            sorting: false,\r\n            render: (rowData) => (\r\n              <img\r\n                src={require(`../../images/products/${rowData.image}`).default}\r\n                style={{ width: 50, height: 60, borderRadius: \"0.3rem\" }}\r\n                alt=\"product\"\r\n              />\r\n            ),\r\n          },\r\n          { field: \"description\", title: \"Description\", sorting: false },\r\n        ]}\r\n        data={records}\r\n        actions={[\r\n          {\r\n            icon: Edit,\r\n            tooltip: \"Edit Product\",\r\n            onClick: (event, rowData) => {\r\n              setActionItem(rowData);\r\n              setEditPopUp(true);\r\n            },\r\n          },\r\n          {\r\n            icon: DeleteOutline,\r\n            tooltip: \"Delete Product\",\r\n            onClick: (event, rowData) => {\r\n              setActionItem(rowData);\r\n              setDeletePopUp(true);\r\n            },\r\n          },\r\n        ]}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n        }}\r\n      />\r\n      <EditItem\r\n        editPopUp={editPopUp}\r\n        setEditPopUp={setEditPopUp}\r\n        item={actionItem}\r\n        imagePath=\"products\"\r\n        route=\"updateProduct\"\r\n        setIsLoading={setIsLoading}\r\n        setRecords={setRecords}\r\n      />\r\n      <DeleteItem\r\n        DeletePopUp={DeletePopUp}\r\n        setDeletePopUp={setDeletePopUp}\r\n        item={actionItem}\r\n        route={\"deleteProduct\"}\r\n        setIsLoading={setIsLoading}\r\n        setRecords={setRecords}\r\n      />\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Payment\\useKhaltiCheckout.js",["333"],"import KhaltiCheckout from \"khalti-checkout-web\";\r\nimport React from \"react\";\r\n\r\nexport default function useKhaltiCheckout() {\r\n  let config = {\r\n    publicKey: \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\r\n    productIdentity: \"1234567890\",\r\n    productName: \"Drogon\",\r\n    productUrl: \"http://gameofthrones.com/buy/Dragons\",\r\n    eventHandler: {\r\n      onSuccess(payload) {\r\n        // hit merchant api for initiating verfication\r\n        console.log(payload);\r\n      },\r\n      // onError handler is optional\r\n      onError(error) {\r\n        // handle errors\r\n        console.log(error);\r\n      },\r\n    },\r\n    // one can set the order of payment options and also the payment options based on the order and items in the array\r\n    paymentPreference: [\r\n      \"MOBILE_BANKING\",\r\n      \"KHALTI\",\r\n      \"EBANKING\",\r\n      \"CONNECT_IPS\",\r\n      \"SCT\",\r\n    ],\r\n  };\r\n\r\n  const checkout = () => {\r\n    let response = new KhaltiCheckout(config);\r\n    response.show({ amount: 1000 });\r\n  };\r\n\r\n  return { checkout };\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\CustomToolbar.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\CustomSnackbar.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ClientReview.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useCards.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\ServicesTable.js",["334","335","336","337"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { forwardRef } from \"react\";\r\nimport AddItem from \"../common/AddItem\";\r\nimport useTableActions from \"../common/useTableActions\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchServices } from \"../../redux/Booking/booking-actions\";\r\nimport { BiSleepy } from \"react-icons/bi\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  DeleteIcon: forwardRef((props, ref) => (\r\n    <DeleteOutline {...props} ref={ref} />\r\n  )),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\nexport default function ProductsTable() {\r\n  //state for delete and edit popup for selected row\r\n  const [DeletePopUp, setDeletePopUp] = useState(false);\r\n  const [editPopUp, setEditPopUp] = useState(false);\r\n\r\n  //to send the item to edit or delete\r\n  const [actionItem, setActionItem] = useState({});\r\n\r\n  const loading = useSelector((state) => state.booking.loading);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const services = useSelector((state) => state.booking.services);\r\n  const dispatch = useDispatch();\r\n  //store array from database\r\n  const [records, setRecords] = useState(services);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      dispatch(fetchServices());\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, [records]);\r\n  const { DeleteItem, EditItem } = useTableActions();\r\n  return (\r\n    <AdminDashboard>\r\n      <AddItem\r\n        title=\"Add Service\"\r\n        postRoute=\"addServices\"\r\n        setRecords={setRecords}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n      <MaterialTable\r\n        title=\"Service Table\"\r\n        icons={tableIcons}\r\n        isLoading={isLoading}\r\n        columns={[\r\n          {\r\n            field: \"tableData.id + 1\",\r\n            title: \"Id\",\r\n            render: (rowData) => {\r\n              return <p>{rowData.tableData.id + 1}</p>;\r\n            },\r\n          },\r\n          { field: \"name\", title: \" Service Name\" },\r\n          { field: \"price\", title: \"Price\" },\r\n          {\r\n            field: \"image\",\r\n            title: \"Image\",\r\n            sorting: false,\r\n            render: (rowData) => (\r\n              <img\r\n                src={require(`../../images/services/${rowData.image}`).default}\r\n                style={{ width: 90, height: 60, borderRadius: \"0.3rem\" }}\r\n                alt=\"product\"\r\n              />\r\n            ),\r\n          },\r\n          { field: \"description\", title: \"Description\", sorting: false },\r\n        ]}\r\n        data={records}\r\n        actions={[\r\n          {\r\n            icon: Edit,\r\n            tooltip: \"Edit Service\",\r\n            onClick: (event, rowData) => {\r\n              setActionItem(rowData);\r\n              setEditPopUp(true);\r\n            },\r\n          },\r\n          {\r\n            icon: DeleteOutline,\r\n            tooltip: \"Delete Service\",\r\n            onClick: (event, rowData) => {\r\n              setActionItem(rowData);\r\n              setDeletePopUp(true);\r\n            },\r\n          },\r\n        ]}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n        }}\r\n      />\r\n      <EditItem\r\n        editPopUp={editPopUp}\r\n        setEditPopUp={setEditPopUp}\r\n        item={actionItem}\r\n        imagePath=\"services\"\r\n        route=\"updateService\"\r\n        setRecords={setRecords}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n      <DeleteItem\r\n        DeletePopUp={DeletePopUp}\r\n        setDeletePopUp={setDeletePopUp}\r\n        item={actionItem}\r\n        route={\"deleteService\"}\r\n        setRecords={setRecords}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\AdminDashboard.js",["338","339","340","341","342"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { AiFillShop, AiOutlineHome } from \"react-icons/ai\";\r\nimport { SiProducthunt, SiGooglecalendar } from \"react-icons/si\";\r\nimport { BsBag } from \"react-icons/bs\";\r\nimport {\r\n  RiScissors2Fill,\r\n  RiMapPinUserLine,\r\n  RiCalendarCheckLine,\r\n} from \"react-icons/ri\";\r\nimport { FaUserCircle, FaShoppingBag } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GiShoppingCart } from \"react-icons/gi\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: \"teal\",\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function AdminDashboard({ children }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const ListItemWithLink = (props) => {\r\n    const { title, children, path } = props;\r\n    return (\r\n      <Link to={path} style={{ textDecoration: \"none\", color: \"inherit\" }}>\r\n        <ListItem button>\r\n          <ListItemIcon style={{ marginLeft: \"0.5rem\" }}>\r\n            {children}\r\n          </ListItemIcon>\r\n          <ListItemText primary={title} />\r\n        </ListItem>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Admin Panel\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <ListItemWithLink path=\"/admin\" title=\"Dashboard\">\r\n            <AiOutlineHome size={20} />\r\n          </ListItemWithLink>\r\n\r\n          <ListItemWithLink path=\"/admin/userRole\" title=\"User Role\">\r\n            <RiMapPinUserLine size={20} />\r\n          </ListItemWithLink>\r\n        </List>\r\n\r\n        <Divider />\r\n        <List style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <ListItemWithLink path=\"/admin/product\" title=\"Services\">\r\n            <RiScissors2Fill size={20} />\r\n          </ListItemWithLink>\r\n          <ListItemWithLink path=\"/admin/service\" title=\"Products\">\r\n            <BsBag size={20} />\r\n          </ListItemWithLink>\r\n        </List>\r\n        <Divider />\r\n        <List style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <ListItemWithLink path=\"/admin/appointment\" title=\"Appointments\">\r\n            <RiCalendarCheckLine size={20} />\r\n          </ListItemWithLink>\r\n          <ListItemWithLink path=\"/admin/ecommerce\" title=\"Ecommerce\">\r\n            <GiShoppingCart size={20} />\r\n          </ListItemWithLink>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\ProtectedRoute.js",["343","344","345"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute(props) {\r\n  const role = useSelector((state) => state.login.role);\r\n\r\n  const { isAuth: isAuth, permission, component: Component, ...rest } = props;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuth) {\r\n          // if (permission === role) {\r\n          // } else {\r\n          //   <div>SHOW ERROR PAGE</div>;\r\n          // }\r\n          return <Component />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n            // state to know from whereever you called this route\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\Routes.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\RoutesWithNavbar.js",["346"],"import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Home from \"../components/Home\";\r\nimport Inventory from \"../components/Inventory/Inventory\";\r\nimport ShowItem from \"../components/Inventory/ShowItem\";\r\n\r\nimport UserProfile from \"../components/Profile/UserProfile\";\r\nimport StaffProfile from \"../components/Profile/StaffProfile\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Cart from \"../components/Inventory/Cart\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport UserRoles from \"../components/Admin/UserRoles\";\r\nimport BookService from \"../components/Booking/BookService\";\r\nimport OrderPage from \"../components/Booking/OrderPage\";\r\nimport BookingCart from \"../components/Booking/BookingCart\";\r\n\r\nexport default function RoutesWithNavbar() {\r\n  const token = useSelector((state) => state.login.authToken);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/store\" component={Inventory} />\r\n        <Route exact path=\"/roles\" component={UserRoles} />\r\n        <Route exact path=\"/store/:id\" component={ShowItem} />\r\n        {/* <Route exact path=\"/map\" component={} /> */}\r\n        {/* <Route exact path=\"/user\" component={UserProfile} /> */}\r\n        {/* <ProtectedRoute path=\"/staff\" isAuth={token} component={StaffProfile} /> */}\r\n\r\n        {/* <ProtectedRoute path=\"/profile\" component={UserProfile} isAuth={} /> */}\r\n        {/* <Footer /> */}\r\n        <Route exact path=\"/booking/:id\" component={OrderPage} />\r\n        <Route exact path=\"/bookingCart\" component={BookingCart} />\r\n        <Route exact path=\"/cart\" component={Cart} />\r\n        <Route exact path=\"/booking\" component={BookService} />\r\n        <ProtectedRoute path=\"/user\" isAuth={token} component={UserProfile} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\AdminRoutes.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\AddItem.js",["347","348","349","350","351","352","353"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Button, Box, Grid } from \"@material-ui/core\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport ImageUploader from \"./ImageUploader\";\r\n\r\nimport PopUp from \"./PopUp\";\r\nimport axios from \"axios\";\r\nimport useCustomForm from \"./useCustomForm\";\r\nimport { addService, fetchServices } from \"../../redux/Booking/booking-actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProducts } from \"../../redux/Ecommerce/eStore-actions\";\r\n\r\nexport default function AddItem(props) {\r\n  const { postRoute, title, setRecords, setIsLoading } = props;\r\n  const { CustomTextField } = useCustomForm();\r\n  const dispatch = useDispatch();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n\r\n  const services = useSelector((state) => state.booking.services);\r\n  const products = useSelector((state) => state.booking.products);\r\n\r\n  const Schema = Yup.object().shape({\r\n    name: Yup.string().required(\"Name is required!\"),\r\n    description: Yup.string().required(\"Description is required!\"),\r\n    price: Yup.number().required(\"Price is required\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    image: null,\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    setOpenPopup(false);\r\n    //to send image file and values to the backend\r\n    let data = new FormData();\r\n    console.log(values.image);\r\n    data.append(\"name\", values.name);\r\n    data.append(\"description\", values.description);\r\n    data.append(\"price\", values.price);\r\n    data.append(\"image\", values.image);\r\n\r\n    setIsLoading(true);\r\n    axios.post(`/${postRoute}`, data).then((res) => {\r\n      if (postRoute === \"addServices\") {\r\n        // dispatch(addService());\r\n        setTimeout(() => {\r\n          axios.get(\"/addServices\").then((res) => setRecords(res.data.result));\r\n          // dispatch(fetchServices());\r\n          setIsLoading(false);\r\n        }, 2000);\r\n      } else {\r\n        setTimeout(() => {\r\n          axios.get(\"/addProducts\").then((res) => setRecords(res.data.result));\r\n          // dispatch(fetchProducts());\r\n          setIsLoading(false);\r\n        }, 2000);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container>\r\n      <Button\r\n        onClick={() => setOpenPopup(true)}\r\n        style={{\r\n          backgroundColor: \"teal\",\r\n          marginBottom: \"1rem\",\r\n          width: \"13rem\",\r\n        }}\r\n      >\r\n        {title}\r\n      </Button>\r\n      <PopUp title={title} openPopup={openPopup} setOpenPopup={setOpenPopup}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={Schema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ errors, handleChange, touched, setFieldValue }) => (\r\n            <Form>\r\n              <Grid container spacing={2} component=\"div\">\r\n                <Grid item xs={12} md={6}>\r\n                  <ImageUploader setFieldValue={setFieldValue} />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Grid\r\n                    container\r\n                    component=\"div\"\r\n                    spacing={2}\r\n                    style={{ padding: \"1rem\" }}\r\n                  >\r\n                    <Grid item xs={12}>\r\n                      <CustomTextField\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        error={errors.name && touched.name}\r\n                        onChange={handleChange}\r\n                        errortext={errors.name}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <CustomTextField\r\n                        label=\"Price\"\r\n                        name=\"price\"\r\n                        type=\"number\"\r\n                        error={errors.price && touched.price}\r\n                        onChange={handleChange}\r\n                        errortext={errors.price}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <CustomTextField\r\n                        label=\"Description\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        multiline\r\n                        rows={5}\r\n                        error={errors.description && touched.description}\r\n                        onChange={handleChange}\r\n                        errortext={errors.description}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Box style={{ float: \"right\" }}>\r\n                    <Button onClick={() => setOpenPopup(false)}>Cancel</Button>\r\n                    <Button type=\"submit\">Add</Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </PopUp>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\OrderPage.js",["354","355","356"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Grid, Box, Typography, Button } from \"@material-ui/core\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport { SiCashapp } from \"react-icons/si\";\r\n\r\nimport \"../scss/orderpage.scss\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchStaffs } from \"../../redux/Booking/booking-actions\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nfunction OrderPage() {\r\n  const { DropdownSelect, CustomDatePicker } = useCustomForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchStaffs());\r\n  }, []);\r\n\r\n  const item = useSelector((state) => state.booking.currentItem);\r\n  const userData = useSelector((state) => state.login.userData);\r\n\r\n  const [choosenTime, setChoosenTime] = useState(null);\r\n  const [choosenSpecialist, setChoosenSpecialist] = useState(null);\r\n\r\n  const appointments = useSelector((state) => state.booking.appointments);\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const staffs = useSelector((state) => state.booking.staffs);\r\n  const specialist = staffs.map((item) => ({\r\n    value: item.fname,\r\n    id: item.user_id,\r\n  }));\r\n\r\n  //to get tommorows date\r\n  const todayMoment = moment();\r\n  const tommorowMoment = todayMoment.clone().add(1, \"days\");\r\n  const tommorowDate = moment.utc(tommorowMoment._d).format(\"YYYY-MM-DD\");\r\n\r\n  const [appointmentDate, setappointmentDate] = useState(tommorowDate);\r\n\r\n  // const SpecialistsAvailable = [\r\n  //   { id: 1, name: \"Luffy\" },\r\n  //   { id: 2, name: \"Chopper\" },\r\n  //   { id: 3, name: \"Nami\" },\r\n  //   { id: 4, name: \"Zoro\" },\r\n  //   { id: 5, name: \"Sanji\" },\r\n  // ];\r\n\r\n  const TimeAvailable = [\r\n    { value: \"9:00-10:00\", id: \"9-10\" },\r\n    { value: \"10:00-11:00\", id: \"10-11\" },\r\n    { value: \"11:00-12:00\", id: \"11-12\" },\r\n    { value: \"2:00-3:00\", id: \"2-3\" },\r\n    { value: \"3:00-4:00\", id: \"3-4\" },\r\n    { value: \"4:00-5:00\", id: \"4-5\" },\r\n  ];\r\n  let history = useHistory();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let userId;\r\n    let timeId;\r\n\r\n    // TimeAvailable.map((item) => (timeId = item.id));\r\n\r\n    if (userData.length > 0) {\r\n      if (choosenSpecialist !== null) {\r\n        userData.map((user) => (userId = user.user_id));\r\n        axios\r\n          .post(\"/bookAppointment\", {\r\n            serviceId: item.service_id,\r\n            userId: userId,\r\n            time: choosenTime,\r\n            date: appointmentDate,\r\n            specialist: choosenSpecialist,\r\n          })\r\n          .then((res) => {\r\n            setSnackbar(true);\r\n            setResponse(res.data.message);\r\n            setSnackType(res.data.type);\r\n            if (res.data.type === \"success\") {\r\n              setTimeout(() => {\r\n                history.goBack();\r\n              }, 2000);\r\n            }\r\n          });\r\n        // dispatch(\r\n        //   bookAppointment(item.service_id, userId, time, choosenSpecialist)\r\n        // );\r\n      } else {\r\n        setSnackbar(true);\r\n        setResponse(\"Please provide all the Details\");\r\n        setSnackType(\"error\");\r\n      }\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {response && response.length > 0 && (\r\n        <CustomSnackbar\r\n          snackbarOpen={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackType={snackType}\r\n          snackContent={response}\r\n        />\r\n      )}\r\n      <Container style={{ paddingTop: \"8rem\" }}>\r\n        <Grid container spacing={4}>\r\n          <Grid item sm={12} md={6} style={{ marginTop: \"3rem\" }}>\r\n            <Box\r\n              style={{\r\n                borderRadius: \"0.7rem\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <img\r\n                src={require(`../../images/services/${item.image}`).default}\r\n                alt=\"container\"\r\n                className=\"itemImage\"\r\n              />\r\n            </Box>\r\n            <Box className=\"image-subText\">\r\n              <Typography>\r\n                <FaCheckCircle className=\"icons\" />\r\n                100% Customer Satisfaction\r\n              </Typography>\r\n              <Typography>\r\n                <FaCheckCircle className=\"icons\" />\r\n                Cancel Appointment Anytime\r\n              </Typography>\r\n              <Typography>\r\n                <SiCashapp className=\"icons\" />\r\n                Payment method of your choice\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item sm={12} md={6}>\r\n            <Box>\r\n              <Typography\r\n                variant=\"h4\"\r\n                style={{ fontWeight: \"bold\", marginBottom: \"1rem\" }}\r\n              >\r\n                {item.name}\r\n              </Typography>\r\n\r\n              <Box className=\"product-info\">\r\n                <Box className=\"price\">Rs. {item.price}</Box>\r\n                <Typography variant=\"caption\" className=\"price-subText\">\r\n                  Exclusive of taxes\r\n                </Typography>\r\n              </Box>\r\n              <Box className=\"description\">\r\n                <Typography>{item.description}</Typography>\r\n              </Box>\r\n              <Box marginBottom=\"1rem\" marginTop=\"1rem\">\r\n                <Typography htmlFor=\"date-picker\" variant=\"caption\">\r\n                  Choose Date\r\n                </Typography>\r\n                <br />\r\n                <CustomDatePicker\r\n                  name=\"date\"\r\n                  id=\"date-picker\"\r\n                  disablePast\r\n                  style={{ width: \"18rem\" }}\r\n                  value={appointmentDate}\r\n                  onChange={(value) => setappointmentDate(value)}\r\n                />\r\n              </Box>\r\n\r\n              {specialist && (\r\n                <DropdownSelect\r\n                  title=\"Choose Specialist\"\r\n                  name=\"specialist\"\r\n                  id=\"specialist\"\r\n                  value={choosenSpecialist}\r\n                  array={specialist}\r\n                  // defaultValue=\"Random\"\r\n                  onChange={(e) => {\r\n                    setChoosenSpecialist(e.target.value);\r\n                  }}\r\n                />\r\n              )}\r\n              {TimeAvailable && (\r\n                <DropdownSelect\r\n                  title=\"Time Available\"\r\n                  name=\"time\"\r\n                  id=\"time\"\r\n                  value={choosenTime}\r\n                  array={TimeAvailable}\r\n                  onChange={(e) => {\r\n                    setChoosenTime(e.target.value);\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <Button\r\n                onClick={onSubmit}\r\n                style={{\r\n                  backgroundColor: \"teal\",\r\n                  color: \"white\",\r\n                  width: \"14rem\",\r\n                  padding: \"0.6rem\",\r\n                  borderRadius: \"0.7rem\",\r\n                  margin: \"0.5rem\",\r\n                  marginLeft: \"2rem\",\r\n                }}\r\n              >\r\n                Book Appointment\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderPage;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\AppointmentTable.js",["357","358","359","360","361","362"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { forwardRef } from \"react\";\r\nimport AddItem from \"../common/AddItem\";\r\nimport useTableActions from \"../common/useTableActions\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProducts } from \"../../redux/Ecommerce/eStore-actions\";\r\nimport { fetchAppointment } from \"../../redux/Booking/booking-actions\";\r\nimport { moment } from \"moment\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  DeleteIcon: forwardRef((props, ref) => (\r\n    <DeleteOutline {...props} ref={ref} />\r\n  )),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nexport default function AppointmentTable() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const services = useSelector((state) => state.booking.services);\r\n  //store array from database\r\n  const [records, setRecords] = useState(services);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(services);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    dispatch(fetchAppointment());\r\n    setTimeout(() => {\r\n      dispatch(fetchProducts());\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, [records]);\r\n\r\n  return (\r\n    <AdminDashboard>\r\n      <MaterialTable\r\n        title=\"Appointment Table\"\r\n        icons={tableIcons}\r\n        isLoading={isLoading}\r\n        columns={[\r\n          {\r\n            field: \"tableData.id + 1\",\r\n            title: \"Id\",\r\n            render: (rowData) => {\r\n              return <p>{rowData.tableData.id + 1}</p>;\r\n            },\r\n          },\r\n          { field: \"serviceName\", title: \"Service Name\" },\r\n          { field: \"servicePrice\", title: \"Price\" },\r\n          { field: \"staff_name\", title: \"Staff\" },\r\n          { field: \"date\", title: \"Date\" },\r\n          { field: \"time\", title: \"Time\" },\r\n          { field: \"client\", title: \"Client\" },\r\n        ]}\r\n        data={records}\r\n      />\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\EcommerceTable.js",["363","364","365","366","367"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { forwardRef } from \"react\";\r\nimport AddItem from \"../common/AddItem\";\r\nimport useTableActions from \"../common/useTableActions\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProducts } from \"../../redux/Ecommerce/eStore-actions\";\r\nimport { fetchAppointment } from \"../../redux/Booking/booking-actions\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  DeleteIcon: forwardRef((props, ref) => (\r\n    <DeleteOutline {...props} ref={ref} />\r\n  )),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nexport default function EcommerceTable() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const appointments = useSelector((state) => state.booking.appointments);\r\n  //store array from database\r\n  const [records, setRecords] = useState(appointments);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(appointments);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    dispatch(fetchAppointment());\r\n    setTimeout(() => {\r\n      dispatch(fetchProducts());\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, [records]);\r\n\r\n  return (\r\n    <AdminDashboard>\r\n      <MaterialTable\r\n        title=\"Ecommerce Table\"\r\n        icons={tableIcons}\r\n        isLoading={isLoading}\r\n        columns={[\r\n          {\r\n            field: \"tableData.id + 1\",\r\n            title: \"Id\",\r\n            render: (rowData) => {\r\n              return <p>{rowData.tableData.id + 1}</p>;\r\n            },\r\n          },\r\n          { field: \"serviceName\", title: \"Product Name\" },\r\n          { field: \"servicePrice\", title: \"Price\" },\r\n          { field: \"client\", title: \"Client\" },\r\n        ]}\r\n        data={records}\r\n      />\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\BookingCart.js",["368","369","370","371"],"import React from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Toolbar,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function BookingCart() {\r\n  const bookingCart = useSelector((state) => state.booking.bookingCart);\r\n  console.log(bookingCart);\r\n  return (\r\n    <div style={{ marginTop: \"10rem\" }}>\r\n      {bookingCart !== undefined && bookingCart.length > 0 ? (\r\n        bookingCart.map((item) => (\r\n          <Grid key={item.product_id} item xs={12} sm={8}>\r\n            <Paper>\r\n              <Grid container spacing={2} style={{ padding: \"1rem\" }}>\r\n                <Grid item xs={5}>\r\n                  <Box\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    paddingLeft=\"0.5rem\"\r\n                    height=\"70px\"\r\n                    overflow=\"hidden\"\r\n                  >\r\n                    <img\r\n                      src={\r\n                        require(`../../images/services/${item.image}`).default\r\n                      }\r\n                      alt=\"product\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Typography variant=\"body1\">{item.name}</Typography>\r\n                  <Typography variant=\"body2\">Rs. {item.price}</Typography>\r\n                  <Typography variant=\"body2\">Quantity : {item.qty}</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"body2\">\r\n                    Total = {item.price * item.qty}\r\n                  </Typography>\r\n                  <Typography\r\n                    type=\"button\"\r\n                    color=\"error\"\r\n                    variant=\"body2\"\r\n                    //   className={classes.deleteBtn}\r\n                    //   onClick={() => removeFromCart(item.product_id)}\r\n                  >\r\n                    Remove\r\n                    <AiFillDelete style={{ marginLeft: \"0.4rem\" }} size={15} />\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ))\r\n      ) : (\r\n        <Grid item xs={12}>\r\n          <Paper>\r\n            <Box padding=\"0.5rem\" textAlign=\"center\">\r\n              <Typography variant=\"body2\" style={{ color: \"lightGrey\" }}>\r\n                No items in the cart.{\" \"}\r\n                <Link\r\n                  // lassName={classes.link}\r\n                  to=\"/store\"\r\n                >\r\n                  VISIT STORE\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      )}\r\n      {bookingCart !== undefined && bookingCart.length > 0 && (\r\n        <Grid item xs={12} sm={4}>\r\n          <Paper>\r\n            <Box padding=\"1.2rem\" marginTop=\"1.5rem\">\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={8}>\r\n                  <Typography variant=\"body2\">Price : {}</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Typography variant=\"body2\">Price : {}</Typography>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <Typography align=\"left\" variant=\"body2\">\r\n                    VAT\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  {\" \"}\r\n                  <Typography align=\"left\" variant=\"body2\">\r\n                    13%\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <Typography variant=\"body2\">Total Amount: {}</Typography>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Typography variant=\"body2\"> sa{}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Box marginTop=\"0.5rem\" marginBottom=\"-0.4rem\" textAlign=\"center\">\r\n                <Link\r\n                  // className={classes.link}\r\n                  to=\"/payment\"\r\n                >\r\n                  <Button style={{ backgroundColor: \"teal\" }}>Checkout</Button>\r\n                </Link>\r\n              </Box>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"380","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":13},{"ruleId":"381","severity":1,"message":"382","line":33,"column":6,"nodeType":"383","endLine":33,"endColumn":8,"suggestions":"384"},{"ruleId":"381","severity":1,"message":"385","line":35,"column":6,"nodeType":"383","endLine":35,"endColumn":8,"suggestions":"386"},{"ruleId":"381","severity":1,"message":"387","line":115,"column":6,"nodeType":"383","endLine":115,"endColumn":8,"suggestions":"388"},{"ruleId":"376","severity":1,"message":"389","line":5,"column":10,"nodeType":"378","messageId":"379","endLine":5,"endColumn":17},{"ruleId":"376","severity":1,"message":"390","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":13},{"ruleId":"376","severity":1,"message":"391","line":17,"column":7,"nodeType":"378","messageId":"379","endLine":17,"endColumn":14},{"ruleId":"376","severity":1,"message":"392","line":6,"column":3,"nodeType":"378","messageId":"379","endLine":6,"endColumn":12},{"ruleId":"376","severity":1,"message":"393","line":13,"column":3,"nodeType":"378","messageId":"379","endLine":13,"endColumn":11},{"ruleId":"381","severity":1,"message":"385","line":60,"column":6,"nodeType":"383","endLine":60,"endColumn":8,"suggestions":"394"},{"ruleId":"376","severity":1,"message":"395","line":2,"column":17,"nodeType":"378","messageId":"379","endLine":2,"endColumn":26},{"ruleId":"376","severity":1,"message":"396","line":11,"column":3,"nodeType":"378","messageId":"379","endLine":11,"endColumn":16},{"ruleId":"376","severity":1,"message":"397","line":12,"column":3,"nodeType":"378","messageId":"379","endLine":12,"endColumn":16},{"ruleId":"376","severity":1,"message":"398","line":16,"column":3,"nodeType":"378","messageId":"379","endLine":16,"endColumn":16},{"ruleId":"376","severity":1,"message":"399","line":17,"column":3,"nodeType":"378","messageId":"379","endLine":17,"endColumn":16},{"ruleId":"376","severity":1,"message":"400","line":24,"column":9,"nodeType":"378","messageId":"379","endLine":24,"endColumn":23},{"ruleId":"376","severity":1,"message":"401","line":25,"column":9,"nodeType":"378","messageId":"379","endLine":25,"endColumn":23},{"ruleId":"376","severity":1,"message":"402","line":18,"column":8,"nodeType":"378","messageId":"379","endLine":18,"endColumn":14},{"ruleId":"376","severity":1,"message":"403","line":24,"column":10,"nodeType":"378","messageId":"379","endLine":24,"endColumn":18},{"ruleId":"381","severity":1,"message":"404","line":120,"column":6,"nodeType":"383","endLine":120,"endColumn":8,"suggestions":"405"},{"ruleId":"376","severity":1,"message":"395","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"406","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":21},{"ruleId":"376","severity":1,"message":"380","line":9,"column":8,"nodeType":"378","messageId":"379","endLine":9,"endColumn":13},{"ruleId":"376","severity":1,"message":"407","line":30,"column":8,"nodeType":"378","messageId":"379","endLine":30,"endColumn":20},{"ruleId":"376","severity":1,"message":"403","line":31,"column":18,"nodeType":"378","messageId":"379","endLine":31,"endColumn":26},{"ruleId":"376","severity":1,"message":"408","line":1,"column":33,"nodeType":"378","messageId":"379","endLine":1,"endColumn":39},{"ruleId":"376","severity":1,"message":"395","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"409","line":12,"column":8,"nodeType":"378","messageId":"379","endLine":12,"endColumn":21},{"ruleId":"376","severity":1,"message":"410","line":24,"column":23,"nodeType":"378","messageId":"379","endLine":24,"endColumn":34},{"ruleId":"376","severity":1,"message":"411","line":36,"column":11,"nodeType":"378","messageId":"379","endLine":36,"endColumn":25},{"ruleId":"376","severity":1,"message":"412","line":5,"column":3,"nodeType":"378","messageId":"379","endLine":5,"endColumn":7},{"ruleId":"376","severity":1,"message":"408","line":7,"column":3,"nodeType":"378","messageId":"379","endLine":7,"endColumn":9},{"ruleId":"376","severity":1,"message":"413","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":17},{"ruleId":"376","severity":1,"message":"414","line":19,"column":8,"nodeType":"378","messageId":"379","endLine":19,"endColumn":18},{"ruleId":"376","severity":1,"message":"393","line":20,"column":8,"nodeType":"378","messageId":"379","endLine":20,"endColumn":16},{"ruleId":"376","severity":1,"message":"415","line":21,"column":8,"nodeType":"378","messageId":"379","endLine":21,"endColumn":19},{"ruleId":"376","severity":1,"message":"416","line":23,"column":10,"nodeType":"378","messageId":"379","endLine":23,"endColumn":18},{"ruleId":"376","severity":1,"message":"417","line":24,"column":10,"nodeType":"378","messageId":"379","endLine":24,"endColumn":16},{"ruleId":"376","severity":1,"message":"418","line":25,"column":10,"nodeType":"378","messageId":"379","endLine":25,"endColumn":14},{"ruleId":"376","severity":1,"message":"419","line":26,"column":10,"nodeType":"378","messageId":"379","endLine":26,"endColumn":14},{"ruleId":"376","severity":1,"message":"420","line":18,"column":9,"nodeType":"378","messageId":"379","endLine":18,"endColumn":16},{"ruleId":"381","severity":1,"message":"421","line":23,"column":6,"nodeType":"383","endLine":23,"endColumn":8,"suggestions":"422"},{"ruleId":"376","severity":1,"message":"423","line":83,"column":7,"nodeType":"378","messageId":"379","endLine":83,"endColumn":25},{"ruleId":"376","severity":1,"message":"406","line":15,"column":10,"nodeType":"378","messageId":"379","endLine":15,"endColumn":21},{"ruleId":"376","severity":1,"message":"410","line":15,"column":23,"nodeType":"378","messageId":"379","endLine":15,"endColumn":34},{"ruleId":"376","severity":1,"message":"395","line":17,"column":10,"nodeType":"378","messageId":"379","endLine":17,"endColumn":19},{"ruleId":"376","severity":1,"message":"377","line":17,"column":21,"nodeType":"378","messageId":"379","endLine":17,"endColumn":29},{"ruleId":"376","severity":1,"message":"424","line":6,"column":3,"nodeType":"378","messageId":"379","endLine":6,"endColumn":6},{"ruleId":"376","severity":1,"message":"425","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":13},{"ruleId":"376","severity":1,"message":"380","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":13},{"ruleId":"381","severity":1,"message":"385","line":75,"column":6,"nodeType":"383","endLine":75,"endColumn":15,"suggestions":"426"},{"ruleId":"376","severity":1,"message":"427","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":13},{"ruleId":"376","severity":1,"message":"380","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":13},{"ruleId":"376","severity":1,"message":"428","line":27,"column":10,"nodeType":"378","messageId":"379","endLine":27,"endColumn":18},{"ruleId":"376","severity":1,"message":"429","line":62,"column":9,"nodeType":"378","messageId":"379","endLine":62,"endColumn":16},{"ruleId":"381","severity":1,"message":"385","line":77,"column":6,"nodeType":"383","endLine":77,"endColumn":15,"suggestions":"430"},{"ruleId":"376","severity":1,"message":"431","line":19,"column":10,"nodeType":"378","messageId":"379","endLine":19,"endColumn":20},{"ruleId":"376","severity":1,"message":"432","line":20,"column":10,"nodeType":"378","messageId":"379","endLine":20,"endColumn":23},{"ruleId":"376","severity":1,"message":"433","line":20,"column":25,"nodeType":"378","messageId":"379","endLine":20,"endColumn":41},{"ruleId":"376","severity":1,"message":"434","line":27,"column":10,"nodeType":"378","messageId":"379","endLine":27,"endColumn":22},{"ruleId":"376","severity":1,"message":"435","line":27,"column":24,"nodeType":"378","messageId":"379","endLine":27,"endColumn":37},{"ruleId":"376","severity":1,"message":"410","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":21},{"ruleId":"376","severity":1,"message":"436","line":6,"column":9,"nodeType":"378","messageId":"379","endLine":6,"endColumn":13},{"ruleId":"437","severity":1,"message":"438","line":8,"column":11,"nodeType":"439","messageId":"440","endLine":8,"endColumn":25,"fix":"441"},{"ruleId":"376","severity":1,"message":"442","line":9,"column":8,"nodeType":"378","messageId":"379","endLine":9,"endColumn":20},{"ruleId":"376","severity":1,"message":"395","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"443","line":11,"column":10,"nodeType":"378","messageId":"379","endLine":11,"endColumn":20},{"ruleId":"376","severity":1,"message":"396","line":11,"column":22,"nodeType":"378","messageId":"379","endLine":11,"endColumn":35},{"ruleId":"376","severity":1,"message":"398","line":13,"column":10,"nodeType":"378","messageId":"379","endLine":13,"endColumn":23},{"ruleId":"376","severity":1,"message":"444","line":18,"column":9,"nodeType":"378","messageId":"379","endLine":18,"endColumn":17},{"ruleId":"376","severity":1,"message":"445","line":21,"column":9,"nodeType":"378","messageId":"379","endLine":21,"endColumn":17},{"ruleId":"376","severity":1,"message":"446","line":22,"column":9,"nodeType":"378","messageId":"379","endLine":22,"endColumn":17},{"ruleId":"381","severity":1,"message":"385","line":21,"column":6,"nodeType":"383","endLine":21,"endColumn":8,"suggestions":"447"},{"ruleId":"376","severity":1,"message":"448","line":29,"column":9,"nodeType":"378","messageId":"379","endLine":29,"endColumn":21},{"ruleId":"376","severity":1,"message":"449","line":71,"column":9,"nodeType":"378","messageId":"379","endLine":71,"endColumn":15},{"ruleId":"376","severity":1,"message":"380","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":13},{"ruleId":"376","severity":1,"message":"450","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":15},{"ruleId":"376","severity":1,"message":"451","line":6,"column":8,"nodeType":"378","messageId":"379","endLine":6,"endColumn":23},{"ruleId":"376","severity":1,"message":"452","line":27,"column":10,"nodeType":"378","messageId":"379","endLine":27,"endColumn":16},{"ruleId":"376","severity":1,"message":"453","line":60,"column":19,"nodeType":"378","messageId":"379","endLine":60,"endColumn":29},{"ruleId":"381","severity":1,"message":"385","line":71,"column":6,"nodeType":"383","endLine":71,"endColumn":15,"suggestions":"454"},{"ruleId":"376","severity":1,"message":"380","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":13},{"ruleId":"376","severity":1,"message":"450","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":15},{"ruleId":"376","severity":1,"message":"451","line":6,"column":8,"nodeType":"378","messageId":"379","endLine":6,"endColumn":23},{"ruleId":"376","severity":1,"message":"453","line":59,"column":19,"nodeType":"378","messageId":"379","endLine":59,"endColumn":29},{"ruleId":"381","severity":1,"message":"385","line":70,"column":6,"nodeType":"383","endLine":70,"endColumn":15,"suggestions":"455"},{"ruleId":"376","severity":1,"message":"392","line":4,"column":3,"nodeType":"378","messageId":"379","endLine":4,"endColumn":12},{"ruleId":"376","severity":1,"message":"456","line":5,"column":3,"nodeType":"378","messageId":"379","endLine":5,"endColumn":10},{"ruleId":"376","severity":1,"message":"425","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":13},{"ruleId":"376","severity":1,"message":"410","line":14,"column":23,"nodeType":"378","messageId":"379","endLine":14,"endColumn":34},"no-native-reassign",["457"],"no-negated-in-lhs",["458"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userData'. Either include them or remove the dependency array.","ArrayExpression",["459"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["460"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["461"],"'connect' is defined but never used.","'isLoggedIn' is defined but never used.","'history' is assigned a value but never used.","'Container' is defined but never used.","'MenuItem' is defined but never used.",["462"],"'useEffect' is defined but never used.","'fetchServices' is defined but never used.","'updateService' is defined but never used.","'fetchProducts' is defined but never used.","'updateProduct' is defined but never used.","'updatedService' is assigned a value but never used.","'updatedProduct' is assigned a value but never used.","'FLogin' is defined but never used.","'userData' is defined but never used.","React Hook useEffect has missing dependencies: 'Token', 'dispatch', 'history', and 'userData'. Either include them or remove the dependency array.",["463"],"'useSelector' is defined but never used.","'MenuDropdown' is defined but never used.","'Button' is defined but never used.","'useCustomForm' is defined but never used.","'useDispatch' is defined but never used.","'ChangePassword' is assigned a value but never used.","'Grid' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'BsSearch' is defined but never used.","'Select' is defined but never used.","'Menu' is defined but never used.","'List' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array. If 'fetchProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["464"],"'mapDispatchToProps' is assigned a value but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.",["465"],"'React' is defined but never used.","'BiSleepy' is defined but never used.","'loading' is assigned a value but never used.",["466"],"'AiFillShop' is defined but never used.","'SiProducthunt' is defined but never used.","'SiGooglecalendar' is defined but never used.","'FaUserCircle' is defined but never used.","'FaShoppingBag' is defined but never used.","'role' is assigned a value but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"467","text":"468"},"'StaffProfile' is defined but never used.","'addService' is defined but never used.","'dispatch' is assigned a value but never used.","'services' is assigned a value but never used.","'products' is assigned a value but never used.",["469"],"'appointments' is assigned a value but never used.","'timeId' is defined but never used.","'AddItem' is defined but never used.","'useTableActions' is defined but never used.","'moment' is defined but never used.","'setRecords' is assigned a value but never used.",["470"],["471"],"'Toolbar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"474","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"483","fix":"485"},[259,273],"isAuth",{"desc":"474","fix":"486"},{"desc":"483","fix":"487"},{"desc":"483","fix":"488"},"Update the dependencies array to be: [dispatch, userData]",{"range":"489","text":"490"},"Update the dependencies array to be: [dispatch]",{"range":"491","text":"492"},"Update the dependencies array to be: [history, token]",{"range":"493","text":"494"},{"range":"495","text":"492"},"Update the dependencies array to be: [Token, dispatch, history, userData]",{"range":"496","text":"497"},"Update the dependencies array to be: [fetchProducts]",{"range":"498","text":"499"},"Update the dependencies array to be: [dispatch, records]",{"range":"500","text":"501"},{"range":"502","text":"501"},{"range":"503","text":"492"},{"range":"504","text":"501"},{"range":"505","text":"501"},[832,834],"[dispatch, userData]",[875,877],"[dispatch]",[2768,2770],"[history, token]",[1600,1602],[3213,3215],"[Token, dispatch, history, userData]",[483,485],"[fetchProducts]",[3309,3318],"[dispatch, records]",[3420,3429],[754,756],[3217,3226],[3197,3206]]