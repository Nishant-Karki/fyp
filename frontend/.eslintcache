[{"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\Contact.js":"1","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\PopUp.js":"2","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\FLogin.js":"3","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\BookService.js":"4","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-actions.js":"5","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\index.js":"6","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\Admin.js":"7","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\SignUpPage.js":"8","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\BingMap.js":"9","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ParallaxComp.js":"10","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-types.js":"11","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\GLogin.js":"12","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\rootReducer.js":"13","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\App.js":"14","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\UserRoles.js":"15","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Footer\\Footer.js":"16","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-reducers.js":"17","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useTableActions.js":"18","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\LoginPage.js":"19","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-reducers.js":"20","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-actions.js":"21","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-types.js":"22","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\ProfilePic.js":"23","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Navbar\\Navbar.js":"24","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\About.js":"25","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\ImageUploader.js":"26","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\store.js":"27","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\ShowItem.js":"28","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\OurServices.js":"29","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\UserProfile.js":"30","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ShortDetails.js":"31","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\EditDetails.js":"32","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\OurTeam.js":"33","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\MenuDropdown.js":"34","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useCustomForm.js":"35","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\useSettings.js":"36","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\GoogleMap.js":"37","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\StaffProfile.js":"38","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-types.js":"39","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-reducers.js":"40","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-actions.js":"41","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\Inventory.js":"42","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\Cart.js":"43","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Payment\\Payment.js":"44","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\index.js":"45","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\ProductsTable.js":"46","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Payment\\useKhaltiCheckout.js":"47","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\CustomToolbar.js":"48","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\CustomSnackbar.js":"49","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ClientReview.js":"50","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useCards.js":"51","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\ServicesTable.js":"52","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\AdminDashboard.js":"53","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\ProtectedRoute.js":"54","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\Routes.js":"55","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\RoutesWithNavbar.js":"56","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\AdminRoutes.js":"57","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\AddItem.js":"58","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\OrderPage.js":"59"},{"size":4310,"mtime":1609906534908,"results":"60","hashOfConfig":"61"},{"size":1039,"mtime":1612005993633,"results":"62","hashOfConfig":"61"},{"size":895,"mtime":1607927029834,"results":"63","hashOfConfig":"61"},{"size":2527,"mtime":1614320442853,"results":"64","hashOfConfig":"61"},{"size":1960,"mtime":1614315222474,"results":"65","hashOfConfig":"61"},{"size":989,"mtime":1613540382345,"results":"66","hashOfConfig":"61"},{"size":176,"mtime":1614151058188,"results":"67","hashOfConfig":"61"},{"size":9263,"mtime":1614074706731,"results":"68","hashOfConfig":"61"},{"size":859,"mtime":1609994722156,"results":"69","hashOfConfig":"61"},{"size":1491,"mtime":1610083457000,"results":"70","hashOfConfig":"61"},{"size":298,"mtime":1614076923302,"results":"71","hashOfConfig":"61"},{"size":2254,"mtime":1614060626337,"results":"72","hashOfConfig":"61"},{"size":366,"mtime":1613799915793,"results":"73","hashOfConfig":"61"},{"size":296,"mtime":1614149855041,"results":"74","hashOfConfig":"61"},{"size":6427,"mtime":1614154027888,"results":"75","hashOfConfig":"61"},{"size":1498,"mtime":1613637108954,"results":"76","hashOfConfig":"61"},{"size":1968,"mtime":1614314933062,"results":"77","hashOfConfig":"61"},{"size":6653,"mtime":1614316674764,"results":"78","hashOfConfig":"61"},{"size":6587,"mtime":1614163130207,"results":"79","hashOfConfig":"61"},{"size":1085,"mtime":1614065915672,"results":"80","hashOfConfig":"61"},{"size":785,"mtime":1614251622317,"results":"81","hashOfConfig":"61"},{"size":213,"mtime":1614065848248,"results":"82","hashOfConfig":"61"},{"size":2829,"mtime":1614065940113,"results":"83","hashOfConfig":"61"},{"size":8601,"mtime":1614005507578,"results":"84","hashOfConfig":"61"},{"size":1395,"mtime":1609865588988,"results":"85","hashOfConfig":"61"},{"size":2856,"mtime":1614240988292,"results":"86","hashOfConfig":"61"},{"size":665,"mtime":1614263506737,"results":"87","hashOfConfig":"61"},{"size":3076,"mtime":1613538139260,"results":"88","hashOfConfig":"61"},{"size":2366,"mtime":1613450612410,"results":"89","hashOfConfig":"61"},{"size":6899,"mtime":1614075328037,"results":"90","hashOfConfig":"61"},{"size":2866,"mtime":1609862374578,"results":"91","hashOfConfig":"61"},{"size":6566,"mtime":1614076622365,"results":"92","hashOfConfig":"61"},{"size":860,"mtime":1613974757715,"results":"93","hashOfConfig":"61"},{"size":1140,"mtime":1613975571705,"results":"94","hashOfConfig":"61"},{"size":5476,"mtime":1614321501993,"results":"95","hashOfConfig":"61"},{"size":3135,"mtime":1614062168767,"results":"96","hashOfConfig":"61"},{"size":652,"mtime":1609942819287,"results":"97","hashOfConfig":"61"},{"size":3302,"mtime":1614066627793,"results":"98","hashOfConfig":"61"},{"size":361,"mtime":1614165084908,"results":"99","hashOfConfig":"61"},{"size":2523,"mtime":1614315334034,"results":"100","hashOfConfig":"61"},{"size":1210,"mtime":1614155259458,"results":"101","hashOfConfig":"61"},{"size":2530,"mtime":1614156615164,"results":"102","hashOfConfig":"61"},{"size":5886,"mtime":1613550747152,"results":"103","hashOfConfig":"61"},{"size":1622,"mtime":1613568367050,"results":"104","hashOfConfig":"61"},{"size":549,"mtime":1607952331530,"results":"105","hashOfConfig":"61"},{"size":5445,"mtime":1614238416355,"results":"106","hashOfConfig":"61"},{"size":1024,"mtime":1613559336044,"results":"107","hashOfConfig":"61"},{"size":509,"mtime":1611748710449,"results":"108","hashOfConfig":"61"},{"size":632,"mtime":1613658651585,"results":"109","hashOfConfig":"61"},{"size":1592,"mtime":1612946366007,"results":"110","hashOfConfig":"61"},{"size":2247,"mtime":1609929836753,"results":"111","hashOfConfig":"61"},{"size":5567,"mtime":1614238750234,"results":"112","hashOfConfig":"61"},{"size":5862,"mtime":1614155888994,"results":"113","hashOfConfig":"61"},{"size":850,"mtime":1614153902494,"results":"114","hashOfConfig":"61"},{"size":1468,"mtime":1614164954560,"results":"115","hashOfConfig":"61"},{"size":1773,"mtime":1614319852165,"results":"116","hashOfConfig":"61"},{"size":0,"mtime":1614153858143,"results":"117","hashOfConfig":"61"},{"size":4948,"mtime":1614252493429,"results":"118","hashOfConfig":"61"},{"size":3394,"mtime":1614321365432,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1qj5tx2",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"122"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"246","usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"122"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"122"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\Contact.js",[],["259","260"],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\PopUp.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\FLogin.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\BookService.js",["261","262","263","264"],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-actions.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\index.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\Admin.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\SignUpPage.js",["265"],"import {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Moment from \"moment\";\r\n\r\nimport axios from \"axios\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\n\r\nconst useStyles = makeStyles({\r\n  contactContainer: { marginTop: \"10%\", marginBottom: \"10%\" },\r\n  paper: {\r\n    width: \"33rem\",\r\n    padding: \"2.5rem\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  submitBtn: {\r\n    textAlign: \"center\",\r\n    marginTop: \"1.4rem\",\r\n  },\r\n  radioButton: {\r\n    paddingLeft: \"1.4rem\",\r\n    marginTop: \"0.7rem\",\r\n  },\r\n  login: {\r\n    marginTop: \"-1rem\",\r\n    paddingBottom: \"1rem\",\r\n    marginLeft: \"18rem\",\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"inherit\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  fname: Yup.string().required(\"Required\"),\r\n  lname: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email().required(\"Invalid Email!!\"),\r\n  password: Yup.string()\r\n    .min(8, \"Must have 8 characters\")\r\n    .required(\"Password is required\"),\r\n  passwordConfirmation: Yup.string()\r\n    .required(\"Password is required\")\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match.\"),\r\n  phone: Yup.number().min(10).required(\"Number is required\"),\r\n  dob: Yup.date().required(\"Date is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  fname: \"\",\r\n  lname: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordConfirmation: \"\",\r\n  phone: null,\r\n  dob: null,\r\n  gender: \"\",\r\n};\r\n\r\nfunction SignUpPage() {\r\n  const classes = useStyles();\r\n\r\n  let history = useHistory();\r\n  const { CustomTextField, CustomDatePicker } = useCustomForm();\r\n\r\n  const token = useSelector((state) => state.login.authToken);\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  const radioData = [\r\n    { label: \"Male\", value: \"Male\" },\r\n    { label: \"Female\", value: \"Female\" },\r\n    { label: \"Other\", value: \"Other\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (token != null) {\r\n      setSnackbar(true);\r\n      setResponse(\"Already logged in\");\r\n      setSnackType(\"warning\");\r\n\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 1500);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    axios\r\n      .post(\"/register\", {\r\n        values,\r\n      })\r\n      .then((response) => {\r\n        setResponse(response.data.message);\r\n        setSnackType(response.data.type);\r\n\r\n        setTimeout(() => {\r\n          response.data.type === \"success\" && history.push(\"/login\");\r\n        }, 1500);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.contactContainer}>\r\n      {response && response.length > 0 && (\r\n        <CustomSnackbar\r\n          snackbarOpen={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackType={snackType}\r\n          snackContent={response}\r\n        />\r\n      )}\r\n      <Typography variant=\"h4\" style={{ textAlign: \"center\" }}>\r\n        JOIN US\r\n      </Typography>\r\n      <Box className={classes.box}>\r\n        <Paper className={classes.paper}>\r\n          <Link to=\"/login\" className={classes.link}>\r\n            <Typography\r\n              align=\"right\"\r\n              type=\"button\"\r\n              variant=\"body2\"\r\n              className={classes.login}\r\n            >\r\n              Login Instead\r\n            </Typography>\r\n          </Link>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={SignUpSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {({ errors, handleChange, touched, setFieldValue, values }) => (\r\n              <Form>\r\n                <Grid container spacing={4} component=\"div\">\r\n                  <Grid item xs={12} sm={6}>\r\n                    <CustomTextField\r\n                      label=\"First Name\"\r\n                      name=\"fname\"\r\n                      type=\"text\"\r\n                      error={errors.fname && touched.fname}\r\n                      errortext={errors.fname}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <CustomTextField\r\n                      label=\"Last Name\"\r\n                      name=\"lname\"\r\n                      type=\"text\"\r\n                      error={errors.lname && touched.lname}\r\n                      errortext={errors.lname}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      label=\"Your Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      error={errors.email && touched.email}\r\n                      errortext={errors.email}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    {\" \"}\r\n                    <CustomTextField\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      error={errors.password && touched.password}\r\n                      errortext={errors.password}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <CustomTextField\r\n                      label=\"Confirm\"\r\n                      name=\"passwordConfirmation\"\r\n                      type=\"password\"\r\n                      error={\r\n                        errors.passwordConfirmation &&\r\n                        touched.passwordConfirmation\r\n                      }\r\n                      errortext={errors.passwordConfirmation}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <CustomTextField\r\n                      label=\"Phone\"\r\n                      type=\"tel\"\r\n                      name=\"phone\"\r\n                      error={errors.phone && touched.phone}\r\n                      errortext={errors.phone}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Box>\r\n                      <CustomDatePicker\r\n                        label=\"Date of Birth\"\r\n                        name=\"dob\"\r\n                        disableFuture\r\n                        minDate={new Date(\"1950-01-01\")}\r\n                        value={values.dob}\r\n                        setFieldValue={setFieldValue}\r\n                        error={errors.dob && touched.dob}\r\n                        inputVariant=\"outlined\"\r\n                        onChange={(value) =>\r\n                          setFieldValue(\r\n                            \"dob\",\r\n                            Moment(value).format(\"YYYY-MM-DD\")\r\n                          )\r\n                        }\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.radioButton}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel color=\"secondary\" component=\"legend\">\r\n                        Gender\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        label=\"gender\"\r\n                        name=\"gender\"\r\n                        onChange={(e) =>\r\n                          setFieldValue(\"gender\", e.target.value)\r\n                        }\r\n                      >\r\n                        <Box display=\"flex\">\r\n                          {radioData.map((radio) => (\r\n                            <FormControlLabel\r\n                              key={radio.value}\r\n                              value={radio.value}\r\n                              control={<Radio size=\"small\" />}\r\n                              label={radio.label}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box textAlign=\"center\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    className={classes.submitBtn}\r\n                    onClick={() => setSnackbar(true)}\r\n                  >\r\n                    Sign Up\r\n                  </Button>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\BingMap.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ParallaxComp.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-types.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\GLogin.js",["266","267","268"],"import React from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  authToken,\r\n  isLoggedIn,\r\n  userData,\r\n} from \"../../redux/Login/login-actions\";\r\n\r\nimport { FaGoogle } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\n\r\nfunction GLogin({ setResponse, setSnackType, setSnackbar }) {\r\n  let history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const successResponse = (response) => {\r\n    const {\r\n      givenName,\r\n      familyName,\r\n      email,\r\n      googleId,\r\n      imageUrl,\r\n    } = response.profileObj;\r\n    dispatch(authToken(response.tokenObj.access_token));\r\n    axios\r\n      .post(\"/social-login\", {\r\n        givenName,\r\n        familyName,\r\n        email,\r\n        googleId,\r\n        imageUrl,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setResponse(res.data.message);\r\n        setSnackType(res.data.type);\r\n        setSnackbar(true);\r\n        dispatch(userData(res.data.result));\r\n\r\n        // setTimeout(() => {\r\n        //   history.push(\"/\");\r\n        // }, 1500);\r\n\r\n        // localStorage.setItem(\"token\", response.tokenObj.access_token);\r\n      });\r\n  };\r\n\r\n  const failureResponse = (res) => {\r\n    setResponse(\"Failed to Login\");\r\n    setSnackType(\"info\");\r\n    setSnackbar(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GoogleLogin\r\n        clientId=\"1063695284455-cqvqm27presuv90l5ufd06jjo0ligt02.apps.googleusercontent.com\"\r\n        render={(renderProps) => (\r\n          <Button style={{ letterSpacing: 0.7 }} onClick={renderProps.onClick}>\r\n            <FaGoogle\r\n              size={18}\r\n              style={{ marginRight: \"1rem\", marginTop: \"0.1rem\" }}\r\n            />\r\n            Continue with Google\r\n          </Button>\r\n        )}\r\n        onSuccess={successResponse}\r\n        onFailure={failureResponse}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     isLoggedIn: (message) => dispatch(isLoggedIn(message)),\r\n//     userData: (message) => dispatch(userData(message)),\r\n//   };\r\n// };\r\n\r\nexport default GLogin;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\rootReducer.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\App.js",["269"],"import React from \"react\";\r\nimport \"./app.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Routes from \"./Routes/Routes\";\r\n\r\nfunction App() {\r\n  const token = useSelector((state) => state.login.authToken);\r\n  return (\r\n    <>\r\n      <Routes />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\UserRoles.js",["270"],"import {\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  Container,\r\n  InputAdornment,\r\n  TextField,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\nimport PopUp from \"../common/PopUp\";\r\nimport { RadioGroup } from \"@material-ui/core\";\r\nimport { FormControlLabel } from \"@material-ui/core\";\r\nimport { Radio } from \"@material-ui/core\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\n\r\nexport default function UserRoles() {\r\n  //state for snackbar\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  //for popup\r\n  const [openPopUp, setOpenPopUp] = useState(false);\r\n\r\n  //to store role\r\n  const [role, setRole] = useState(\"C\");\r\n\r\n  //for search box value\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  //data from backend\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  const fetchUser = () => {\r\n    axios.post(\"/userRole\", { email: value }).then((res) => {\r\n      setUserData(res.data.result);\r\n      setSnackbar(true);\r\n      setResponse(res.data.message);\r\n      setSnackType(res.data.type);\r\n    });\r\n  };\r\n\r\n  const updateUser = (id) => {\r\n    axios.post(\"/updateRole\", { id: id, role: role }).then((res) => {\r\n      setSnackbar(true);\r\n      setResponse(res.data.message);\r\n      setSnackType(res.data.type);\r\n      axios\r\n        .post(\"/userRole\", { email: value })\r\n        .then((res) => setUserData(res.data.result));\r\n    });\r\n    setOpenPopUp(false);\r\n  };\r\n  return (\r\n    <AdminDashboard>\r\n      {response && response.length > 0 && (\r\n        <CustomSnackbar\r\n          snackbarOpen={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackType={snackType}\r\n          snackContent={response}\r\n        />\r\n      )}\r\n      <Typography variant=\"h6\">User Roles</Typography>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Search User\"\r\n            variant=\"outlined\"\r\n            value={value}\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            inputProps={{\r\n              maxLength: 50,\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <BsSearch />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button\r\n            onClick={() => fetchUser()}\r\n            style={{\r\n              marginLeft: \"2rem\",\r\n              width: \"8rem\",\r\n              backgroundColor: \"teal\",\r\n            }}\r\n          >\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {userData &&\r\n        userData.length > 0 &&\r\n        userData.map((item) => (\r\n          <Box\r\n            key={item.user_id}\r\n            marginTop=\"2rem\"\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Paper style={{ padding: \"1.5rem\", width: \"29.2rem\" }}>\r\n              <Typography\r\n                align=\"center\"\r\n                variant=\"h6\"\r\n                style={{ paddingBottom: \"1rem\" }}\r\n              >\r\n                USER DETAIL\r\n              </Typography>\r\n              <Grid container justify=\"center\" style={{ paddingLeft: \"4rem\" }}>\r\n                <Grid item xs={5}>\r\n                  <Typography variant=\"body1\">Username</Typography>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Typography variant=\"body1\">{item.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <Typography variant=\"body1\">Email id</Typography>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Typography variant=\"body1\">{item.email}</Typography>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <Typography variant=\"body1\">Role</Typography>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Typography variant=\"body1\">\r\n                    {item.role === \"A\" ? (\r\n                      <span>Admin</span>\r\n                    ) : item.role === \"S\" ? (\r\n                      <span>Staff</span>\r\n                    ) : (\r\n                      <span>Client</span>\r\n                    )}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Box display=\"flex\" justifyContent=\"center\" marginTop=\"1.2rem\">\r\n                <Button\r\n                  style={{ backgroundColor: \"teal\", width: \"12rem\" }}\r\n                  onClick={() => setOpenPopUp(true)}\r\n                >\r\n                  <Typography>Change Role</Typography>\r\n                </Button>\r\n              </Box>\r\n            </Paper>\r\n            <PopUp\r\n              title=\"Choose User Role\"\r\n              openPopup={openPopUp}\r\n              setOpenPopup={setOpenPopUp}\r\n            >\r\n              <Box width=\"20rem\">\r\n                <RadioGroup\r\n                  name=\"role\"\r\n                  value={role}\r\n                  onChange={(e) => setRole(e.target.value)}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"C\"\r\n                    control={<Radio />}\r\n                    label=\"Client\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"A\"\r\n                    control={<Radio />}\r\n                    label=\"Admin\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"S\"\r\n                    control={<Radio />}\r\n                    label=\"Staff\"\r\n                  />\r\n                </RadioGroup>\r\n\r\n                <Box style={{ marginTop: \"1rem\" }}>\r\n                  <Button onClick={() => updateUser(item.user_id)}>\r\n                    <Typography>Proceed</Typography>\r\n                  </Button>\r\n                  <Button onClick={() => setOpenPopUp(false)}>\r\n                    <Typography>Abort</Typography>\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </PopUp>\r\n          </Box>\r\n        ))}\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-reducers.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useTableActions.js",["271","272","273","274"],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Login\\LoginPage.js",["275","276"],"import {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nimport GLogin from \"./GLogin\";\r\nimport FLogin from \"./FLogin\";\r\n\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userData, authToken } from \"../../redux/Login/login-actions\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\n\r\nconst useStyles = makeStyles({\r\n  contactContainer: { marginTop: \"10%\", marginBottom: \"10%\" },\r\n  paper: {\r\n    width: \"33rem\",\r\n    padding: \"2.5rem\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  submitBtn: {\r\n    textAlign: \"center\",\r\n    marginTop: \"1.4rem\",\r\n  },\r\n  signIn: {\r\n    marginTop: \"-1rem\",\r\n    paddingBottom: \"1rem\",\r\n    marginLeft: \"18rem\",\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"inherit\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().email().required(\"Invalid Email!!\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n  loggedIn: false,\r\n};\r\n\r\nfunction LoginPage() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const Token = useSelector((state) => state.login.authToken);\r\n\r\n  const { CustomTextField } = useCustomForm();\r\n\r\n  const onSubmit = (values) => {\r\n    axios\r\n      .post(\"/login\", {\r\n        values,\r\n      })\r\n      .then((response) => {\r\n        setResponse(response.data.message);\r\n        setSnackType(response.data.type);\r\n        if (response.data.auth === true) {\r\n          dispatch(userData(response.data.result));\r\n          dispatch(authToken(response.data.token));\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/login\").then((response) => {\r\n      if (response.data.loggedIn === true && Token != null) {\r\n        setSnackbar(true);\r\n        setResponse(response.data.message);\r\n        setSnackType(response.data.type);\r\n        setTimeout(() => {\r\n          history.push(\"/\");\r\n        }, 1500);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const userAuthenticated = async () => {\r\n    await axios\r\n      .post(\"/isUserAuth\")\r\n      .then((response) => {\r\n        response.data.auth === true &&\r\n          setTimeout(() => {\r\n            history.push(\"/\");\r\n          }, 1500);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios.defaults.headers.common[\"authorization\"] = Token;\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.contactContainer}>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        WELCOME\r\n      </Typography>\r\n      <Box className={classes.box}>\r\n        <Paper className={classes.paper}>\r\n          <Link to=\"/signup\" className={classes.link}>\r\n            <Typography\r\n              align=\"right\"\r\n              type=\"button\"\r\n              variant=\"body2\"\r\n              className={classes.signIn}\r\n            >\r\n              Create an account\r\n            </Typography>\r\n          </Link>\r\n          {response && response.length > 0 && (\r\n            <CustomSnackbar\r\n              snackbarOpen={snackbar}\r\n              setSnackbar={setSnackbar}\r\n              snackType={snackType}\r\n              snackContent={response}\r\n            />\r\n          )}\r\n\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={LoginSchema}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize={false}\r\n          >\r\n            {({ errors, handleChange, touched, values, setFieldValue }) => (\r\n              <Form>\r\n                <Grid container spacing={4}>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      label=\"Your Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      error={errors.email && touched.email}\r\n                      onChange={handleChange}\r\n                      errortext={errors.email}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomTextField\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      error={errors.password && touched.password}\r\n                      onChange={handleChange}\r\n                      errortext={errors.password}\r\n                    />\r\n                  </Grid>\r\n                  {/* <Box>\r\n                    <Typography component=\"div\">\r\n                      <Checkbox\r\n                        className={classes.checkbox}\r\n                        color=\"default\"\r\n                        value={values.loggedIn}\r\n                        onChange={(value) => setFieldValue(\"loggedIn\", true)}\r\n                      />\r\n                      Keep me logged in.\r\n                    </Typography>\r\n                  </Box> */}\r\n                </Grid>\r\n                <Box textAlign=\"center\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    className={classes.submitBtn}\r\n                    onClick={() => {\r\n                      userAuthenticated();\r\n                      setSnackbar(true);\r\n                    }}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n\r\n          <hr style={{ backgroundColor: \"white\" }} />\r\n          <Box textAlign=\"center\">\r\n            <GLogin\r\n              setSnackbar={setSnackbar}\r\n              setResponse={setResponse}\r\n              setSnackType={setSnackType}\r\n            />\r\n            {/* <FLogin /> */}\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     isLoggedIn: (message) => dispatch(isLoggedIn(message)),\r\n//     userData: (message) => dispatch(userData(message)),\r\n//   };\r\n// };\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-reducers.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-actions.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Login\\login-types.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\ProfilePic.js",["277","278","279"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Avatar, makeStyles, Badge, Box } from \"@material-ui/core\";\r\n\r\nimport { AiFillCamera } from \"react-icons/ai\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { updateProfile } from \"../../redux/Login/login-actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgSize: {\r\n    width: theme.spacing(16),\r\n    height: theme.spacing(16),\r\n  },\r\n  box: {\r\n    marginTop: theme.spacing(10),\r\n  },\r\n  //change image icon\r\n  changeImg: {\r\n    backgroundColor: \"green\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    borderRadius: \"1rem\",\r\n    overflow: \"hidden\",\r\n    \"&:hover\": {\r\n      width: \"3.8rem\",\r\n      height: \"2rem\",\r\n    },\r\n  },\r\n  profileName: {\r\n    marginTop: \"0.7rem\",\r\n    marginLeft: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nexport default function ProfilePic({ source, userId }) {\r\n  const classes = useStyles();\r\n\r\n  const { ImageInput } = useCustomForm();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [icon, setIcon] = useState(<AiFillCamera size={18} />);\r\n  const [image, setImage] = useState(\r\n    source != null ? require(`../../images/profile/${source}`).default : null\r\n  );\r\n\r\n  const BadgeComponent = () => {\r\n    const addImage = (e) => {\r\n      const target = e.target.files[0];\r\n      const url = URL.createObjectURL(target);\r\n      setImage(url);\r\n      setIcon(<AiFillCamera size={18} />);\r\n      let data = new FormData();\r\n\r\n      data.append(\"profile\", target);\r\n      data.append(\"id\", userId);\r\n\r\n      // axios.post(`/profileImage`, data).then((res) => console.log(res));\r\n      dispatch(updateProfile(data));\r\n    };\r\n    return (\r\n      <Box\r\n        type=\"button\"\r\n        className={classes.changeImg}\r\n        onMouseEnter={() => {\r\n          setIcon(\r\n            <ImageInput\r\n              styling={{ marginTop: \"0.5rem\" }}\r\n              onChange={(e) => addImage(e)}\r\n            >\r\n              <Typography variant=\"caption\" style={{ padding: \"1rem\" }}>\r\n                Change\r\n              </Typography>\r\n            </ImageInput>\r\n          );\r\n        }}\r\n        onMouseLeave={() => {\r\n          setIcon(<AiFillCamera size={18} />);\r\n        }}\r\n      >\r\n        {icon}\r\n      </Box>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Box className={classes.box} display=\"flex\" justifyContent=\"center\">\r\n        <Badge\r\n          overlap=\"circle\"\r\n          badgeContent={<BadgeComponent />}\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n        >\r\n          <Avatar alt=\"profile\" src={image} className={classes.imgSize} />\r\n        </Badge>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Navbar\\Navbar.js",["280","281"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  AppBar,\r\n  Drawer,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Badge,\r\n  Paper,\r\n  Avatar,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport {\r\n  AiOutlineShoppingCart,\r\n  AiOutlineLogout,\r\n  AiOutlineCloseCircle,\r\n} from \"react-icons/ai\";\r\nimport { HiOutlineUserCircle } from \"react-icons/hi\";\r\nimport { IoIosMenu } from \"react-icons/io\";\r\n\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\nimport useWindowScrollPosition from \"@rehooks/window-scroll-position\";\r\n\r\nimport \"../scss/navbar.scss\";\r\nimport MenuDropdown from \"../common/MenuDropdown\";\r\nimport { logout, userData } from \"../../redux/Login/login-actions\";\r\n\r\nfunction Navbar({ cart, userData }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [change, setChange] = useState(false);\r\n  const changePosition = 80;\r\n\r\n  //for showing navbar on slide\r\n  let position = useWindowScrollPosition();\r\n\r\n  if (position.y > changePosition && !change) {\r\n    setChange(true);\r\n  }\r\n  if (position.y <= changePosition && change) {\r\n    setChange(false);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [cartCount, setCartCount] = useState(null);\r\n  //hook to show number of item in cart\r\n  useEffect(() => {\r\n    let count = 0;\r\n    cart.forEach((item) => (count += item.qty));\r\n    setCartCount(count);\r\n  }, [cart, cartCount]);\r\n\r\n  //style\r\n  let appBarStyle = {\r\n    backgroundColor: change ? \"black\" : \"transparent\",\r\n    transition: \"600ms ease\",\r\n    boxShadow: \"none\",\r\n  };\r\n\r\n  let navLinkStyle = {\r\n    color: change ? \"white\" : \"white\",\r\n    fontWeight: \"bold\",\r\n    letterSpacing: \"3px\",\r\n  };\r\n\r\n  const handleDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const NavLink = ({ path, children }) => {\r\n    return (\r\n      <li>\r\n        <Link className=\"link\" smooth to={path}>\r\n          <Typography component=\"span\" style={navLinkStyle} variant=\"body1\">\r\n            {children}\r\n          </Typography>\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar sticky=\"true\" style={appBarStyle}>\r\n        <Container>\r\n          <Grid container component=\"div\" style={{ paddingTop: \"1.3rem\" }}>\r\n            <Grid item xs={3} sm={2}>\r\n              <Link to=\"/\">\r\n                <Box\r\n                  height=\"3rem\"\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  marginTop=\"-0.8rem\"\r\n                  marginLeft=\"1.5rem\"\r\n                >\r\n                  <img\r\n                    src={require(\"../../images/other/logo-white.png\").default}\r\n                    alt=\"logo\"\r\n                  />\r\n                </Box>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={7} sm={8}>\r\n              <ul className=\"nav-ul d-none  d-md-flex\">\r\n                <NavLink path=\"/#\">HOME</NavLink>\r\n                <NavLink path=\"/#services\">SERVICES</NavLink>\r\n                <NavLink path=\"/store\">STORE</NavLink>\r\n                <NavLink path=\"/#contact\">CONTACT</NavLink>\r\n              </ul>\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} className=\"d-none d-sm-flex\">\r\n              <ul className=\"icons-ul \">\r\n                <li style={{ fontWeight: \"bold\", letterSpacing: \"3px\" }}>\r\n                  <Box className=\"dropdown-icon\">\r\n                    <HiOutlineUserCircle size={22} />\r\n                    <Paper\r\n                      className=\"dropdown-content-profile\"\r\n                      component=\"span\"\r\n                    >\r\n                      <Link to=\"/user\" className=\"link\">\r\n                        <Box\r\n                          padding=\"0.5rem\"\r\n                          display=\"flex\"\r\n                          component=\"span\"\r\n                          className=\"icon-styless\"\r\n                        >\r\n                          {userData.length > 0 ? (\r\n                            userData.map((item) => (\r\n                              <Avatar\r\n                                style={{ width: \"1.7rem\", height: \"1.7rem\" }}\r\n                                src={\r\n                                  item.image != null\r\n                                    ? require(`../../images/profile/${item.image}`)\r\n                                        .default\r\n                                    : null\r\n                                }\r\n                              />\r\n                            ))\r\n                          ) : (\r\n                            <Avatar\r\n                              style={{ width: \"1.7rem\", height: \"1.7rem\" }}\r\n                            />\r\n                          )}\r\n\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            style={{\r\n                              marginLeft: \"0.6rem\",\r\n                              marginTop: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            {userData.length > 0 ? (\r\n                              userData.map((item) => (\r\n                                <span key={item.user_id}>{item.fname}</span>\r\n                              ))\r\n                            ) : (\r\n                              <span>Profile</span>\r\n                            )}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Link>\r\n                      <Divider />\r\n                      <Link to=\"/\" className=\"link\">\r\n                        <Box\r\n                          component=\"div\"\r\n                          padding=\"0.5rem\"\r\n                          display=\"flex\"\r\n                          className=\"icon-styless\"\r\n                          onClick={() => dispatch(logout())}\r\n                        >\r\n                          <AiOutlineLogout size={22} />\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            style={{\r\n                              marginLeft: \"0.8rem\",\r\n                            }}\r\n                          >\r\n                            Logout\r\n                          </Typography>\r\n                        </Box>\r\n                      </Link>\r\n                    </Paper>\r\n                  </Box>\r\n                </li>\r\n\r\n                <NavLink path=\"/cart\">\r\n                  <Badge color=\"error\" badgeContent={cartCount}>\r\n                    <AiOutlineShoppingCart size={22} />\r\n                  </Badge>\r\n                </NavLink>\r\n              </ul>\r\n            </Grid>\r\n          </Grid>\r\n          <IoIosMenu\r\n            size={26}\r\n            onClick={handleDrawer}\r\n            style={{ marginTop: \"-2.5rem\" }}\r\n            className=\"d-flex d-sm-none menu-icon\"\r\n          />\r\n        </Container>\r\n      </AppBar>\r\n      <Drawer anchor=\"right\" open={open} onClose={handleClose}>\r\n        <Box style={{ width: \"16.5rem\" }}>\r\n          <Container style={{ marginTop: \"1rem\" }}>\r\n            <Typography variant=\"h6\" component=\"span\">\r\n              <AiOutlineCloseCircle style={{ marginBottom: \"0.3rem\" }} /> Close\r\n            </Typography>\r\n            <hr\r\n              style={{\r\n                marginTop: \"0.3rem\",\r\n                marginBottom: \"0.5rem\",\r\n                backgroundColor: \"white\",\r\n              }}\r\n            />\r\n            <ul className=\"drawer-navlinks\">\r\n              <li>\r\n                <Link path=\"/#\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">HOME</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/#services\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">SERVICES</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/store\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">STORE</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/#contact\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">CONTACT</Typography>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </Container>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.store.cart,\r\n    userData: state.login.userData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\About.js",["282"],"import { Grid, Box, Typography, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction About() {\r\n  return (\r\n    <Container style={{ marginTop: \"10%\", marginBottom: \"10%\" }}>\r\n      <Grid container spacing={4} style={{ padding: \"1rem\" }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Box style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <img\r\n              src=\"https://images.unsplash.com/photo-1517800249805-f3d51bd0b07f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1032&q=80\"\r\n              alt=\"about-us\"\r\n              width=\"100%\"\r\n              style={{ filter: \"brightness(90%)\" }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Box>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              Who are We\r\n            </Typography>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              Our salon is the territory created for men and women who\r\n              appreciate high quality, impeccable service, and the perfect look.\r\n            </Typography>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Welcome to Nepa De Salon\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\ImageUploader.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\store.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\ShowItem.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\OurServices.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\UserProfile.js",["283","284","285","286"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\n\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { FaPenSquare } from \"react-icons/fa\";\r\n\r\nimport ProfilePic from \"../common/ProfilePic\";\r\nimport CustomToolbar from \"../common/CustomToolbar\";\r\n\r\nimport EditDetails from \"./EditDetails\";\r\nimport useSettings from \"./useSettings\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  profileName: {\r\n    marginTop: \"0.7rem\",\r\n    marginLeft: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nfunction UserProfile() {\r\n  const classes = useStyles();\r\n  const { ChangePassword, DeleteAccount } = useSettings();\r\n\r\n  const [DetailPopUp, setDetailPopUp] = useState(false);\r\n\r\n  const [deletePopUp, setDeletePopUp] = useState(false);\r\n\r\n  const userData = useSelector((state) => state.login.userData);\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  console.log(response);\r\n  const GridContent = ({ children, xs }) => {\r\n    return (\r\n      <Grid item xs={xs}>\r\n        <Typography variant=\"body2\" style={{ paddingBottom: \"0.5rem\" }}>\r\n          {children}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const FlexContent = ({ name, children, color = \"inherit\", onClick }) => {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        type=\"button\"\r\n        justifyContent=\"space-between\"\r\n        onClick={onClick}\r\n      >\r\n        <Typography\r\n          color={color}\r\n          variant=\"body2\"\r\n          style={{ paddingBottom: \"0.7rem\" }}\r\n        >\r\n          {name}\r\n        </Typography>\r\n        <Typography color={color}>{children}</Typography>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {response && response.length > 0 && (\r\n        <CustomSnackbar\r\n          snackbarOpen={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackType={snackType}\r\n          snackContent={response}\r\n        />\r\n      )}\r\n      {userData &&\r\n        userData.map((item) => (\r\n          <div key={item.user_id}>\r\n            <ProfilePic source={item.image} userId={item.user_id} />\r\n            <Typography\r\n              variant=\"h6\"\r\n              className={classes.profileName}\r\n              align=\"center\"\r\n            >\r\n              {item.fname} {item.lname}\r\n            </Typography>\r\n\r\n            <Grid\r\n              container\r\n              component=\"div\"\r\n              spacing={4}\r\n              style={{ marginTop: \"1rem\" }}\r\n            >\r\n              <Grid item xs={12} sm={6}>\r\n                <Paper>\r\n                  <CustomToolbar button=\"true\" title=\"Personal Details\">\r\n                    <Button onClick={() => setDetailPopUp(true)}>\r\n                      <FaPenSquare size={20} />\r\n                    </Button>\r\n                  </CustomToolbar>\r\n                  {/* to open popup */}\r\n                  <EditDetails\r\n                    detailPopUp={DetailPopUp}\r\n                    setDetailPopUp={setDetailPopUp}\r\n                    data={item}\r\n                    setResponse={setResponse}\r\n                    setSnackType={setSnackType}\r\n                    setSnackbar={setSnackbar}\r\n                  />\r\n\r\n                  <Box\r\n                    style={{\r\n                      padding: \"0.5rem 1.5rem 1rem 1.5rem\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Name</GridContent>\r\n                      <GridContent xs={6}>\r\n                        {item.fname} {item.lname}\r\n                      </GridContent>\r\n                    </Grid>\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Email</GridContent>\r\n                      <GridContent xs={6}>{item.email}</GridContent>\r\n                    </Grid>\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Birthday</GridContent>\r\n                      <GridContent xs={6}>\r\n                        {item.dob ? item.dob : <>-</>}\r\n                      </GridContent>\r\n                    </Grid>\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Contact</GridContent>\r\n                      <GridContent xs={6}>\r\n                        {item.phone ? item.phone : <>-</>}\r\n                      </GridContent>\r\n                    </Grid>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              {/* settings */}\r\n              <Grid item xs={12} sm={6}>\r\n                <Paper>\r\n                  <CustomToolbar title=\"Account Settings\" />\r\n                  <Box style={{ padding: \"0.5rem 1.5rem 0.5rem 1.5rem\" }}>\r\n                    {/* <FlexContent name=\"Change Password\">\r\n                <IoIosRepeat size={18} />\r\n              </FlexContent> */}\r\n                    <FlexContent\r\n                      color=\"error\"\r\n                      name=\"Delete Account\"\r\n                      onClick={() => {\r\n                        setDeletePopUp(true);\r\n                      }}\r\n                    >\r\n                      <AiFillDelete size={18} />\r\n                    </FlexContent>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <DeleteAccount\r\n              deletePopUp={deletePopUp}\r\n              setDeletePopUp={setDeletePopUp}\r\n              userId={item.user_id}\r\n            />\r\n\r\n            {/* <PopUp\r\n        openPopUp={deletePopUp}\r\n        setOpenPopUp={setDeletePopUp}\r\n        title=\"Alert\"\r\n      >\r\n        <Box width=\"12rem\">\r\n          <Typography>\r\n            Deleting your account will remove all the records from our database.\r\n          </Typography>\r\n          <Button>Proceed</Button>\r\n          <Button>Abort</Button>\r\n        </Box>\r\n      </PopUp> */}\r\n\r\n            {/* recent activities */}\r\n            {item.role === \"C\" && (\r\n              <Paper style={{ marginTop: \"2rem\" }}>\r\n                <CustomToolbar title=\"Recent Activities\" />\r\n                <Toolbar>No Recent Activities</Toolbar>\r\n              </Paper>\r\n            )}\r\n            {item.role === \"S\" && (\r\n              <Paper style={{ marginTop: \"2rem\" }}>\r\n                <CustomToolbar title=\"Recent Activities\" />\r\n                <Toolbar>No Recent Activities</Toolbar>\r\n              </Paper>\r\n            )}\r\n          </div>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\nexport default withRouter(UserProfile);\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ShortDetails.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\EditDetails.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\OurTeam.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\MenuDropdown.js",["287","288"],"import React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  Avatar,\r\n  withStyles,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function MenuDropdown({ anchorEl, setAnchorEl }) {\r\n  const StyledMenu = withStyles({\r\n    paper: {\r\n      marginTop: \"2rem\",\r\n      marginLeft: \"1rem\",\r\n      float: \"right\",\r\n    },\r\n  })((props) => <Menu elevation={0} getContentAnchorEl={null} {...props} />);\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div>\r\n      <StyledMenu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Box display=\"flex\" width=\"10rem\" flexDirection=\"column\">\r\n          <MenuItem>\r\n            <Avatar />\r\n            <Typography variant=\"body2\">Email</Typography>\r\n          </MenuItem>\r\n          <Divider />\r\n          <MenuItem>\r\n            <Typography variant=\"body2\">Logout</Typography>\r\n          </MenuItem>\r\n        </Box>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useCustomForm.js",["289","290","291"],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\useSettings.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\GoogleMap.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Profile\\StaffProfile.js",["292"],"import React from \"react\";\r\nimport ProfilePic from \"../common/ProfilePic\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  makeStyles,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport CustomToolbar from \"../common/CustomToolbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function StaffProfile() {\r\n  const classes = useStyles();\r\n\r\n  const userData = useSelector((state) => state.login.userData);\r\n  const GridContent = ({ children, xs }) => {\r\n    return (\r\n      <Grid item xs={xs}>\r\n        <Typography variant=\"body2\" style={{ paddingBottom: \"0.5rem\" }}>\r\n          {children}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  };\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <UserProfile />\r\n      {userData.map((item) => (\r\n        <div key={item.user_id}>\r\n          <ProfilePic source={item.image} userId={item.user_id} />\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            {item.name}\r\n          </Typography>\r\n\r\n          <Grid container spacing={2} style={{ marginTop: \"1rem\" }}>\r\n            <Grid item sm={5}>\r\n              <Paper>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <CustomToolbar title=\"Personal Details\" />\r\n                    <Box\r\n                      style={{\r\n                        padding: \"0.5rem 1.5rem 1rem 1.5rem\",\r\n                        overflow: \"hidden\",\r\n                      }}\r\n                    >\r\n                      <Grid container component=\"div\">\r\n                        <GridContent xs={4}>Name</GridContent>\r\n                        <GridContent xs={6}>\r\n                          {item.fname} {item.lname}\r\n                        </GridContent>\r\n                      </Grid>\r\n                      <Grid container component=\"div\">\r\n                        <GridContent xs={4}>Email</GridContent>\r\n                        <GridContent xs={6}>{item.email}</GridContent>\r\n                      </Grid>\r\n                      <Grid container component=\"div\">\r\n                        <GridContent xs={4}>Birthday</GridContent>\r\n                        <GridContent xs={6}>\r\n                          {item.dob ? item.dob : <>-</>}\r\n                        </GridContent>\r\n                      </Grid>\r\n                      <Grid container component=\"div\">\r\n                        <GridContent xs={4}>Contact</GridContent>\r\n                        <GridContent xs={6}>\r\n                          {item.phone ? item.phone : <>-</>}\r\n                        </GridContent>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item sm={7}>\r\n              <Paper>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <CustomToolbar title=\"Upcoming Bookings\" />\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Paper>\r\n                <CustomToolbar title=\"Time Available\" />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-types.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Booking\\booking-reducers.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\redux\\Ecommerce\\eStore-actions.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\Inventory.js",["293","294"],"import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../scss/inventory.scss\";\r\nimport {\r\n  fetchProducts,\r\n  loadCurrentItem,\r\n} from \"../../redux/Ecommerce/eStore-actions\";\r\n\r\nfunction Inventory({ products, fetchProducts, loadCurrentItem }) {\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ marginTop: \"8rem\" }}>\r\n      <Grid container spacing={2}>\r\n        {products.map((item) => (\r\n          <Grid\r\n            key={item.product_id}\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={3}\r\n            style={{ marginTop: \"1.5rem\" }}\r\n          >\r\n            <Paper className=\"product-container\">\r\n              <Box className=\"image-container\">\r\n                <img\r\n                  src={require(`../../images/products/${item.image}`).default}\r\n                  alt=\"product-img\"\r\n                  className=\"image\"\r\n                />\r\n              </Box>\r\n              <Box textAlign=\"center\" marginTop=\"0.3rem\">\r\n                <Typography align=\"center\" variant=\"body1\">\r\n                  {item.name}\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"body1\">\r\n                  Rs. {item.price}\r\n                </Typography>\r\n                <Link\r\n                  to={`/store/${item.product_id}`}\r\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  onClick={() => loadCurrentItem(item)}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      marginBottom: \"0.6rem\",\r\n                      backgroundColor: \"green\",\r\n                      marginTop: \"0.3rem\",\r\n                      width: \"9rem\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"caption\">VIEW ITEM</Typography>\r\n                  </Button>\r\n                </Link>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.store.products,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadCurrentItem: (item) => dispatch(loadCurrentItem(item)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { loadCurrentItem, fetchProducts })(\r\n  Inventory\r\n);\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Inventory\\Cart.js",["295","296","297","298"],"import {\r\n  Box,\r\n  Container,\r\n  Toolbar,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  makeStyles,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch, connect } from \"react-redux\";\r\nimport { removeFromCart } from \"../../redux/Ecommerce/eStore-actions\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: \"6rem\",\r\n  },\r\n  paper: {\r\n    marginTop: \"2rem\",\r\n    maxHeight: \"10rem\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      color: \"grey\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Cart({ cart, removeFromCart }) {\r\n  const classes = useStyles();\r\n\r\n  // const [btnClick, setBtnClick] = useState(false);\r\n\r\n  // const cart = useSelector((state) => state.store.cart);\r\n  // const dispatch = useDispatch(removeFromCart(item));\r\n\r\n  // const handleDelete = (item) => {\r\n  //   setBtnClick(true);\r\n\r\n  // };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <Paper>\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"body1\">CART SUMMARY</Typography>\r\n        </Toolbar>\r\n      </Paper>\r\n      <Grid container spacing={3}>\r\n        {cart.length > 0 ? (\r\n          cart.map((item) => (\r\n            <Grid key={item.product_id} item xs={12} sm={8}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container spacing={2} style={{ padding: \"1rem\" }}>\r\n                  <Grid item xs={5}>\r\n                    <Box\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                      paddingLeft=\"0.5rem\"\r\n                      height=\"70px\"\r\n                      overflow=\"hidden\"\r\n                    >\r\n                      <img\r\n                        src={\r\n                          require(`../../images/products/${item.image}`).default\r\n                        }\r\n                        alt=\"product\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"body1\">{item.name}</Typography>\r\n                    <Typography variant=\"body2\">Rs. {item.price}</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Quantity : {item.qty}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Typography variant=\"body2\">\r\n                      Total = {item.price * item.qty}\r\n                    </Typography>\r\n                    <Typography\r\n                      type=\"button\"\r\n                      color=\"error\"\r\n                      variant=\"body2\"\r\n                      className={classes.deleteBtn}\r\n                      onClick={() => removeFromCart(item.product_id)}\r\n                    >\r\n                      Remove\r\n                      <AiFillDelete\r\n                        style={{ marginLeft: \"0.4rem\" }}\r\n                        size={15}\r\n                      />\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Box padding=\"0.5rem\" textAlign=\"center\">\r\n                <Typography variant=\"body2\" style={{ color: \"lightGrey\" }}>\r\n                  No items in the cart.{\" \"}\r\n                  <Link className={classes.link} to=\"/store\">\r\n                    VISIT STORE\r\n                  </Link>\r\n                </Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {cart.length > 0 && (\r\n          <Grid item xs={12} sm={4}>\r\n            <Paper>\r\n              <Box padding=\"1.2rem\" marginTop=\"1.5rem\">\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={8}>\r\n                    <Typography variant=\"body2\">Price : {}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"body2\">Price : {}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography align=\"left\" variant=\"body2\">\r\n                      VAT\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    {\" \"}\r\n                    <Typography align=\"left\" variant=\"body2\">\r\n                      13%\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography variant=\"body2\">Total Amount: {}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"body2\"> sa{}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box\r\n                  marginTop=\"0.5rem\"\r\n                  marginBottom=\"-0.4rem\"\r\n                  textAlign=\"center\"\r\n                >\r\n                  <Link className={classes.link} to=\"/payment\">\r\n                    <Button style={{ backgroundColor: \"teal\" }}>\r\n                      Checkout\r\n                    </Button>\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.store.cart,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeFromCart: (item) => dispatch(removeFromCart(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Payment\\Payment.js",["299","300"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"../scss/payment.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useKhaltiCheckout from \"./useKhaltiCheckout\";\r\n\r\nexport default function Payment() {\r\n  const { checkout } = useKhaltiCheckout();\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: \"9rem\" }}>\r\n      <Typography align=\"center\" variant=\"h5\">\r\n        Choose your preferred payment method{\" \"}\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        alignItems=\"center\"\r\n        style={{ marginTop: \"3rem\" }}\r\n      >\r\n        <Grid item xs={6}>\r\n          <Link to=\"/\">\r\n            <Paper className=\"paper\">\r\n              <img\r\n                src={require(\"../../images/other/cash-in-hand.png\").default}\r\n                alt=\"cash in hand\"\r\n                className=\"image-payment\"\r\n              />\r\n            </Paper>\r\n          </Link>\r\n          <Typography align=\"center\" variant=\"h6\" className=\"text\">\r\n            Cash in Hand\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className=\"paper\" onClick={() => checkout()}>\r\n            <img\r\n              src={require(\"../../images/other/online-payment.png\").default}\r\n              alt=\"online payment\"\r\n              className=\"image-payment\"\r\n            />\r\n          </Paper>\r\n\r\n          <Typography align=\"center\" variant=\"h6\" className=\"text\">\r\n            Online Payment\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\index.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\ProductsTable.js",["301","302"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { forwardRef } from \"react\";\r\nimport AddItem from \"../common/AddItem\";\r\nimport useTableActions from \"../common/useTableActions\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProducts } from \"../../redux/Ecommerce/eStore-actions\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  DeleteIcon: forwardRef((props, ref) => (\r\n    <DeleteOutline {...props} ref={ref} />\r\n  )),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nexport default function ProductsTable() {\r\n  //state for delete and edit popup for selected row\r\n  const [DeletePopUp, setDeletePopUp] = useState(false);\r\n  const [editPopUp, setEditPopUp] = useState(false);\r\n\r\n  //to send the item to edit or delete\r\n  const [actionItem, setActionItem] = useState({});\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const products = useSelector((state) => state.store.products);\r\n\r\n  //store array from database\r\n  const [records, setRecords] = useState(products);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      dispatch(fetchProducts());\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, [records]);\r\n\r\n  const { DeleteItem, EditItem } = useTableActions();\r\n  return (\r\n    <AdminDashboard>\r\n      <AddItem\r\n        title=\"Add Product\"\r\n        postRoute=\"addProducts\"\r\n        setIsLoading={setIsLoading}\r\n        setRecords={setRecords}\r\n      />\r\n      <MaterialTable\r\n        title=\"Product Table\"\r\n        icons={tableIcons}\r\n        isLoading={isLoading}\r\n        columns={[\r\n          { field: \"product_id\", title: \"ID\" },\r\n          { field: \"name\", title: \" Product Name\" },\r\n          { field: \"price\", title: \"Price\" },\r\n          {\r\n            field: \"image\",\r\n            title: \"Image\",\r\n            sorting: false,\r\n            render: (rowData) => (\r\n              <img\r\n                src={require(`../../images/products/${rowData.image}`).default}\r\n                style={{ width: 50, height: 60, borderRadius: \"0.3rem\" }}\r\n                alt=\"product\"\r\n              />\r\n            ),\r\n          },\r\n          { field: \"description\", title: \"Description\", sorting: false },\r\n        ]}\r\n        data={records}\r\n        actions={[\r\n          {\r\n            icon: Edit,\r\n            tooltip: \"Edit Product\",\r\n            onClick: (event, rowData) => {\r\n              setActionItem(rowData);\r\n              setEditPopUp(true);\r\n            },\r\n          },\r\n          {\r\n            icon: DeleteOutline,\r\n            tooltip: \"Delete Product\",\r\n            onClick: (event, rowData) => {\r\n              setActionItem(rowData);\r\n              setDeletePopUp(true);\r\n            },\r\n          },\r\n        ]}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n        }}\r\n      />\r\n      <EditItem\r\n        editPopUp={editPopUp}\r\n        setEditPopUp={setEditPopUp}\r\n        item={actionItem}\r\n        imagePath=\"products\"\r\n        route=\"updateProduct\"\r\n        setIsLoading={setIsLoading}\r\n        setRecords={setRecords}\r\n      />\r\n      <DeleteItem\r\n        DeletePopUp={DeletePopUp}\r\n        setDeletePopUp={setDeletePopUp}\r\n        item={actionItem}\r\n        route={\"deleteProduct\"}\r\n        setIsLoading={setIsLoading}\r\n        setRecords={setRecords}\r\n      />\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Payment\\useKhaltiCheckout.js",["303"],"import KhaltiCheckout from \"khalti-checkout-web\";\r\nimport React from \"react\";\r\n\r\nexport default function useKhaltiCheckout() {\r\n  let config = {\r\n    publicKey: \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\r\n    productIdentity: \"1234567890\",\r\n    productName: \"Drogon\",\r\n    productUrl: \"http://gameofthrones.com/buy/Dragons\",\r\n    eventHandler: {\r\n      onSuccess(payload) {\r\n        // hit merchant api for initiating verfication\r\n        console.log(payload);\r\n      },\r\n      // onError handler is optional\r\n      onError(error) {\r\n        // handle errors\r\n        console.log(error);\r\n      },\r\n    },\r\n    // one can set the order of payment options and also the payment options based on the order and items in the array\r\n    paymentPreference: [\r\n      \"MOBILE_BANKING\",\r\n      \"KHALTI\",\r\n      \"EBANKING\",\r\n      \"CONNECT_IPS\",\r\n      \"SCT\",\r\n    ],\r\n  };\r\n\r\n  const checkout = () => {\r\n    let response = new KhaltiCheckout(config);\r\n    response.show({ amount: 1000 });\r\n  };\r\n\r\n  return { checkout };\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\CustomToolbar.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\CustomSnackbar.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Home\\ClientReview.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\useCards.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\ServicesTable.js",["304","305","306","307"],"import React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { forwardRef } from \"react\";\r\nimport AddItem from \"../common/AddItem\";\r\nimport useTableActions from \"../common/useTableActions\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nimport AdminDashboard from \"./AdminDashboard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchServices } from \"../../redux/Booking/booking-actions\";\r\nimport { BiSleepy } from \"react-icons/bi\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  DeleteIcon: forwardRef((props, ref) => (\r\n    <DeleteOutline {...props} ref={ref} />\r\n  )),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\nexport default function ProductsTable() {\r\n  //state for delete and edit popup for selected row\r\n  const [DeletePopUp, setDeletePopUp] = useState(false);\r\n  const [editPopUp, setEditPopUp] = useState(false);\r\n\r\n  //to send the item to edit or delete\r\n  const [actionItem, setActionItem] = useState({});\r\n\r\n  const loading = useSelector((state) => state.booking.loading);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const services = useSelector((state) => state.booking.services);\r\n  const dispatch = useDispatch();\r\n  //store array from database\r\n  const [records, setRecords] = useState(services);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      dispatch(fetchServices());\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, [records]);\r\n\r\n  const { DeleteItem, EditItem } = useTableActions();\r\n  return (\r\n    <AdminDashboard>\r\n      <AddItem\r\n        title=\"Add Service\"\r\n        postRoute=\"addServices\"\r\n        setRecords={setRecords}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n      <MaterialTable\r\n        title=\"Service Table\"\r\n        icons={tableIcons}\r\n        isLoading={isLoading}\r\n        columns={[\r\n          { field: \"service_id\", title: \"ID\" },\r\n          { field: \"name\", title: \" Service Name\" },\r\n          { field: \"price\", title: \"Price\" },\r\n          {\r\n            field: \"image\",\r\n            title: \"Image\",\r\n            sorting: false,\r\n            render: (rowData) => (\r\n              <img\r\n                src={require(`../../images/services/${rowData.image}`).default}\r\n                style={{ width: 90, height: 60, borderRadius: \"0.3rem\" }}\r\n                alt=\"product\"\r\n              />\r\n            ),\r\n          },\r\n          { field: \"description\", title: \"Description\", sorting: false },\r\n        ]}\r\n        data={records}\r\n        actions={[\r\n          {\r\n            icon: Edit,\r\n            tooltip: \"Edit Service\",\r\n            onClick: (event, rowData) => {\r\n              setActionItem(rowData);\r\n              setEditPopUp(true);\r\n            },\r\n          },\r\n          {\r\n            icon: DeleteOutline,\r\n            tooltip: \"Delete Service\",\r\n            onClick: (event, rowData) => {\r\n              setActionItem(rowData);\r\n              setDeletePopUp(true);\r\n            },\r\n          },\r\n        ]}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n        }}\r\n      />\r\n      <EditItem\r\n        editPopUp={editPopUp}\r\n        setEditPopUp={setEditPopUp}\r\n        item={actionItem}\r\n        imagePath=\"services\"\r\n        route=\"updateService\"\r\n        setRecords={setRecords}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n      <DeleteItem\r\n        DeletePopUp={DeletePopUp}\r\n        setDeletePopUp={setDeletePopUp}\r\n        item={actionItem}\r\n        route={\"deleteService\"}\r\n        setRecords={setRecords}\r\n        setIsLoading={setIsLoading}\r\n        c\r\n      />\r\n    </AdminDashboard>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Admin\\AdminDashboard.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\ProtectedRoute.js",["308","309","310"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute(props) {\r\n  const role = useSelector((state) => state.login.role);\r\n\r\n  const { isAuth: isAuth, permission, component: Component, ...rest } = props;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuth) {\r\n          // if (permission === role) {\r\n          // } else {\r\n          //   <div>SHOW ERROR PAGE</div>;\r\n          // }\r\n          return <Component />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n            // state to know from whereever you called this route\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\Routes.js",["311"],"import React from \"react\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport LoginPage from \"../components/Login/LoginPage\";\r\n\r\nimport SignUpPage from \"../components/Login/SignUpPage\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Payment from \"../components/Payment/Payment\";\r\nimport RoutesWithNavbar from \"./RoutesWithNavbar\";\r\nimport Admin from \"../components/Admin/Admin\";\r\nimport UserRoles from \"../components/Admin/UserRoles\";\r\nimport ProductsTable from \"../components/Admin/ProductsTable\";\r\nimport ServicesTable from \"../components/Admin/ServicesTable\";\r\n\r\nexport default function Routes() {\r\n  const token = useSelector((state) => state.login.authToken);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/login\" component={LoginPage} />\r\n      <Route exact path=\"/signup\" component={SignUpPage} />\r\n      <ProtectedRoute\r\n        path=\"/admin/userRole\"\r\n        isAuth={token}\r\n        component={UserRoles}\r\n      />\r\n      <ProtectedRoute path=\"/payment\" isAuth={token} component={Payment} />\r\n      <ProtectedRoute\r\n        path=\"/admin/service\"\r\n        isAuth={token}\r\n        component={ProductsTable}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin/product\"\r\n        isAuth={token}\r\n        component={ServicesTable}\r\n      />\r\n      <ProtectedRoute path=\"/admin\" isAuth={token} component={Admin} />\r\n\r\n      <RoutesWithNavbar />\r\n    </Switch>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\RoutesWithNavbar.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\Routes\\AdminRoutes.js",[],"C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\common\\AddItem.js",["312","313","314","315","316","317","318"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Button, Box, Grid } from \"@material-ui/core\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport ImageUploader from \"./ImageUploader\";\r\n\r\nimport PopUp from \"./PopUp\";\r\nimport axios from \"axios\";\r\nimport useCustomForm from \"./useCustomForm\";\r\nimport { addService, fetchServices } from \"../../redux/Booking/booking-actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProducts } from \"../../redux/Ecommerce/eStore-actions\";\r\n\r\nexport default function AddItem(props) {\r\n  const { postRoute, title, setRecords, setIsLoading } = props;\r\n  const { CustomTextField } = useCustomForm();\r\n  const dispatch = useDispatch();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n\r\n  const services = useSelector((state) => state.booking.services);\r\n  const products = useSelector((state) => state.booking.products);\r\n\r\n  const Schema = Yup.object().shape({\r\n    name: Yup.string().required(\"Name is required!\"),\r\n    description: Yup.string().required(\"Description is required!\"),\r\n    price: Yup.number().required(\"Price is required\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    image: null,\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    setOpenPopup(false);\r\n    //to send image file and values to the backend\r\n    let data = new FormData();\r\n    console.log(values.image);\r\n    data.append(\"name\", values.name);\r\n    data.append(\"description\", values.description);\r\n    data.append(\"price\", values.price);\r\n    data.append(\"image\", values.image);\r\n\r\n    setIsLoading(true);\r\n    axios.post(`/${postRoute}`, data).then((res) => {\r\n      if (postRoute === \"addServices\") {\r\n        // dispatch(addService());\r\n        setTimeout(() => {\r\n          axios.get(\"/addServices\").then((res) => setRecords(res.data.result));\r\n          // dispatch(fetchServices());\r\n          setIsLoading(false);\r\n        }, 2000);\r\n      } else {\r\n        setTimeout(() => {\r\n          axios.get(\"/addProducts\").then((res) => setRecords(res.data.result));\r\n          // dispatch(fetchProducts());\r\n          setIsLoading(false);\r\n        }, 2000);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container>\r\n      <Button\r\n        onClick={() => setOpenPopup(true)}\r\n        style={{\r\n          backgroundColor: \"teal\",\r\n          marginBottom: \"1rem\",\r\n          width: \"13rem\",\r\n        }}\r\n      >\r\n        {title}\r\n      </Button>\r\n      <PopUp title={title} openPopup={openPopup} setOpenPopup={setOpenPopup}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={Schema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ errors, handleChange, touched, setFieldValue }) => (\r\n            <Form>\r\n              <Grid container spacing={2} component=\"div\">\r\n                <Grid item xs={12} md={6}>\r\n                  <ImageUploader setFieldValue={setFieldValue} />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Grid\r\n                    container\r\n                    component=\"div\"\r\n                    spacing={2}\r\n                    style={{ padding: \"1rem\" }}\r\n                  >\r\n                    <Grid item xs={12}>\r\n                      <CustomTextField\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        error={errors.name && touched.name}\r\n                        onChange={handleChange}\r\n                        errortext={errors.name}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <CustomTextField\r\n                        label=\"Price\"\r\n                        name=\"price\"\r\n                        type=\"number\"\r\n                        error={errors.price && touched.price}\r\n                        onChange={handleChange}\r\n                        errortext={errors.price}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <CustomTextField\r\n                        label=\"Description\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        multiline\r\n                        rows={5}\r\n                        error={errors.description && touched.description}\r\n                        onChange={handleChange}\r\n                        errortext={errors.description}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Box style={{ float: \"right\" }}>\r\n                    <Button onClick={() => setOpenPopup(false)}>Cancel</Button>\r\n                    <Button type=\"submit\">Add</Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </PopUp>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\karki\\Desktop\\salon\\frontend\\src\\components\\Booking\\OrderPage.js",["319","320","321"],{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","severity":1,"message":"327","line":2,"column":8,"nodeType":"328","messageId":"329","endLine":2,"endColumn":13},{"ruleId":"326","severity":1,"message":"330","line":21,"column":10,"nodeType":"328","messageId":"329","endLine":21,"endColumn":18},{"ruleId":"326","severity":1,"message":"331","line":21,"column":20,"nodeType":"328","messageId":"329","endLine":21,"endColumn":31},{"ruleId":"332","severity":1,"message":"333","line":28,"column":6,"nodeType":"334","endLine":28,"endColumn":8,"suggestions":"335"},{"ruleId":"332","severity":1,"message":"336","line":115,"column":6,"nodeType":"334","endLine":115,"endColumn":8,"suggestions":"337"},{"ruleId":"326","severity":1,"message":"338","line":5,"column":10,"nodeType":"328","messageId":"329","endLine":5,"endColumn":17},{"ruleId":"326","severity":1,"message":"339","line":9,"column":3,"nodeType":"328","messageId":"329","endLine":9,"endColumn":13},{"ruleId":"326","severity":1,"message":"340","line":17,"column":7,"nodeType":"328","messageId":"329","endLine":17,"endColumn":14},{"ruleId":"326","severity":1,"message":"341","line":7,"column":9,"nodeType":"328","messageId":"329","endLine":7,"endColumn":14},{"ruleId":"326","severity":1,"message":"342","line":6,"column":3,"nodeType":"328","messageId":"329","endLine":6,"endColumn":12},{"ruleId":"326","severity":1,"message":"343","line":2,"column":17,"nodeType":"328","messageId":"329","endLine":2,"endColumn":26},{"ruleId":"326","severity":1,"message":"344","line":11,"column":3,"nodeType":"328","messageId":"329","endLine":11,"endColumn":16},{"ruleId":"326","severity":1,"message":"345","line":24,"column":9,"nodeType":"328","messageId":"329","endLine":24,"endColumn":23},{"ruleId":"326","severity":1,"message":"346","line":25,"column":9,"nodeType":"328","messageId":"329","endLine":25,"endColumn":23},{"ruleId":"326","severity":1,"message":"347","line":18,"column":8,"nodeType":"328","messageId":"329","endLine":18,"endColumn":14},{"ruleId":"332","severity":1,"message":"348","line":109,"column":6,"nodeType":"334","endLine":109,"endColumn":8,"suggestions":"349"},{"ruleId":"326","severity":1,"message":"343","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":26},{"ruleId":"326","severity":1,"message":"350","line":8,"column":10,"nodeType":"328","messageId":"329","endLine":8,"endColumn":21},{"ruleId":"326","severity":1,"message":"327","line":9,"column":8,"nodeType":"328","messageId":"329","endLine":9,"endColumn":13},{"ruleId":"326","severity":1,"message":"351","line":30,"column":8,"nodeType":"328","messageId":"329","endLine":30,"endColumn":20},{"ruleId":"326","severity":1,"message":"352","line":31,"column":18,"nodeType":"328","messageId":"329","endLine":31,"endColumn":26},{"ruleId":"326","severity":1,"message":"353","line":1,"column":33,"nodeType":"328","messageId":"329","endLine":1,"endColumn":39},{"ruleId":"326","severity":1,"message":"343","line":1,"column":27,"nodeType":"328","messageId":"329","endLine":1,"endColumn":36},{"ruleId":"326","severity":1,"message":"354","line":12,"column":8,"nodeType":"328","messageId":"329","endLine":12,"endColumn":21},{"ruleId":"326","severity":1,"message":"355","line":24,"column":23,"nodeType":"328","messageId":"329","endLine":24,"endColumn":34},{"ruleId":"326","severity":1,"message":"356","line":36,"column":11,"nodeType":"328","messageId":"329","endLine":36,"endColumn":25},{"ruleId":"326","severity":1,"message":"357","line":5,"column":3,"nodeType":"328","messageId":"329","endLine":5,"endColumn":7},{"ruleId":"326","severity":1,"message":"353","line":7,"column":3,"nodeType":"328","messageId":"329","endLine":7,"endColumn":9},{"ruleId":"326","severity":1,"message":"358","line":8,"column":3,"nodeType":"328","messageId":"329","endLine":8,"endColumn":17},{"ruleId":"326","severity":1,"message":"359","line":22,"column":10,"nodeType":"328","messageId":"329","endLine":22,"endColumn":18},{"ruleId":"326","severity":1,"message":"360","line":24,"column":10,"nodeType":"328","messageId":"329","endLine":24,"endColumn":14},{"ruleId":"326","severity":1,"message":"361","line":18,"column":9,"nodeType":"328","messageId":"329","endLine":18,"endColumn":16},{"ruleId":"332","severity":1,"message":"362","line":23,"column":6,"nodeType":"334","endLine":23,"endColumn":8,"suggestions":"363"},{"ruleId":"326","severity":1,"message":"364","line":83,"column":7,"nodeType":"328","messageId":"329","endLine":83,"endColumn":25},{"ruleId":"326","severity":1,"message":"350","line":15,"column":10,"nodeType":"328","messageId":"329","endLine":15,"endColumn":21},{"ruleId":"326","severity":1,"message":"355","line":15,"column":23,"nodeType":"328","messageId":"329","endLine":15,"endColumn":34},{"ruleId":"326","severity":1,"message":"343","line":17,"column":10,"nodeType":"328","messageId":"329","endLine":17,"endColumn":19},{"ruleId":"326","severity":1,"message":"365","line":17,"column":21,"nodeType":"328","messageId":"329","endLine":17,"endColumn":29},{"ruleId":"326","severity":1,"message":"366","line":6,"column":3,"nodeType":"328","messageId":"329","endLine":6,"endColumn":6},{"ruleId":"326","severity":1,"message":"367","line":8,"column":3,"nodeType":"328","messageId":"329","endLine":8,"endColumn":13},{"ruleId":"326","severity":1,"message":"327","line":3,"column":8,"nodeType":"328","messageId":"329","endLine":3,"endColumn":13},{"ruleId":"332","severity":1,"message":"333","line":75,"column":6,"nodeType":"334","endLine":75,"endColumn":15,"suggestions":"368"},{"ruleId":"326","severity":1,"message":"369","line":2,"column":8,"nodeType":"328","messageId":"329","endLine":2,"endColumn":13},{"ruleId":"326","severity":1,"message":"327","line":3,"column":8,"nodeType":"328","messageId":"329","endLine":3,"endColumn":13},{"ruleId":"326","severity":1,"message":"370","line":27,"column":10,"nodeType":"328","messageId":"329","endLine":27,"endColumn":18},{"ruleId":"326","severity":1,"message":"371","line":62,"column":9,"nodeType":"328","messageId":"329","endLine":62,"endColumn":16},{"ruleId":"332","severity":1,"message":"333","line":77,"column":6,"nodeType":"334","endLine":77,"endColumn":15,"suggestions":"372"},{"ruleId":"326","severity":1,"message":"355","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":21},{"ruleId":"326","severity":1,"message":"373","line":6,"column":9,"nodeType":"328","messageId":"329","endLine":6,"endColumn":13},{"ruleId":"374","severity":1,"message":"375","line":8,"column":11,"nodeType":"376","messageId":"377","endLine":8,"endColumn":25,"fix":"378"},{"ruleId":"326","severity":1,"message":"379","line":3,"column":10,"nodeType":"328","messageId":"329","endLine":3,"endColumn":23},{"ruleId":"326","severity":1,"message":"343","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":26},{"ruleId":"326","severity":1,"message":"380","line":11,"column":10,"nodeType":"328","messageId":"329","endLine":11,"endColumn":20},{"ruleId":"326","severity":1,"message":"344","line":11,"column":22,"nodeType":"328","messageId":"329","endLine":11,"endColumn":35},{"ruleId":"326","severity":1,"message":"381","line":13,"column":10,"nodeType":"328","messageId":"329","endLine":13,"endColumn":23},{"ruleId":"326","severity":1,"message":"382","line":18,"column":9,"nodeType":"328","messageId":"329","endLine":18,"endColumn":17},{"ruleId":"326","severity":1,"message":"383","line":21,"column":9,"nodeType":"328","messageId":"329","endLine":21,"endColumn":17},{"ruleId":"326","severity":1,"message":"330","line":22,"column":9,"nodeType":"328","messageId":"329","endLine":22,"endColumn":17},{"ruleId":"326","severity":1,"message":"384","line":8,"column":3,"nodeType":"328","messageId":"329","endLine":8,"endColumn":12},{"ruleId":"326","severity":1,"message":"385","line":17,"column":8,"nodeType":"328","messageId":"329","endLine":17,"endColumn":20},{"ruleId":"326","severity":1,"message":"386","line":21,"column":11,"nodeType":"328","messageId":"329","endLine":21,"endColumn":27},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["389"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["390"],"'connect' is defined but never used.","'isLoggedIn' is defined but never used.","'history' is assigned a value but never used.","'token' is assigned a value but never used.","'Container' is defined but never used.","'useEffect' is defined but never used.","'fetchServices' is defined but never used.","'updatedService' is assigned a value but never used.","'updatedProduct' is assigned a value but never used.","'FLogin' is defined but never used.","React Hook useEffect has missing dependencies: 'Token' and 'history'. Either include them or remove the dependency array.",["391"],"'useSelector' is defined but never used.","'MenuDropdown' is defined but never used.","'userData' is defined but never used.","'Button' is defined but never used.","'useCustomForm' is defined but never used.","'useDispatch' is defined but never used.","'ChangePassword' is assigned a value but never used.","'Grid' is defined but never used.","'InputAdornment' is defined but never used.","'BsSearch' is defined but never used.","'Menu' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array. If 'fetchProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["392"],"'mapDispatchToProps' is assigned a value but never used.","'useState' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.",["393"],"'React' is defined but never used.","'BiSleepy' is defined but never used.","'loading' is assigned a value but never used.",["394"],"'role' is assigned a value but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"395","text":"396"},"'BrowserRouter' is defined but never used.","'addService' is defined but never used.","'fetchProducts' is defined but never used.","'dispatch' is assigned a value but never used.","'services' is assigned a value but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'CustomDatePicker' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},[259,273],"isAuth","Update the dependencies array to be: [dispatch]",{"range":"408","text":"409"},"Update the dependencies array to be: [history, token]",{"range":"410","text":"411"},"Update the dependencies array to be: [Token, history]",{"range":"412","text":"413"},"Update the dependencies array to be: [fetchProducts]",{"range":"414","text":"415"},"Update the dependencies array to be: [dispatch, records]",{"range":"416","text":"417"},{"range":"418","text":"417"},[630,632],"[dispatch]",[2768,2770],"[history, token]",[2677,2679],"[Token, history]",[483,485],"[fetchProducts]",[3309,3318],"[dispatch, records]",[3420,3429]]